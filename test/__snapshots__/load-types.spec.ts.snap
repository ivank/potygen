// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Query Interface Should convert coalesce sql (SELECT COALESCE(id, character_col) FROM all_types) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "coalesce",
      "type": Object {
        "optional": false,
        "type": "string",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert different result types sql (SELECT * FROM all_types) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "id",
      "type": Object {
        "type": "number",
      },
    },
    Object {
      "name": "not_null",
      "type": Object {
        "type": "number",
      },
    },
    Object {
      "name": "default_not_null",
      "type": Object {
        "type": "number",
      },
    },
    Object {
      "name": "bigint_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "bigserial_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "bit_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "bit_varying_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "boolean_col",
      "type": Object {
        "type": "boolean",
      },
    },
    Object {
      "name": "box_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "bytea_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "character_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "character_varying_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "cidr_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "circle_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "date_col",
      "type": Object {
        "type": "Date",
      },
    },
    Object {
      "name": "double_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "inet_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "integer_col",
      "type": Object {
        "type": "number",
      },
    },
    Object {
      "name": "interval_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "json_col",
      "type": Object {
        "type": "json",
      },
    },
    Object {
      "name": "jsonb_col",
      "type": Object {
        "type": "json",
      },
    },
    Object {
      "name": "line_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "lseg_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "macaddr_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "money_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "numeric_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "path_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "pg_lsn_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "point_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "polygon_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "real_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "smallint_col",
      "type": Object {
        "type": "number",
      },
    },
    Object {
      "name": "smallserial_col",
      "type": Object {
        "type": "number",
      },
    },
    Object {
      "name": "serial_col",
      "type": Object {
        "type": "number",
      },
    },
    Object {
      "name": "text_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "time_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "time_with_time_zone_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "timestamp_col",
      "type": Object {
        "type": "Date",
      },
    },
    Object {
      "name": "timestamp_with_time_zone_col",
      "type": Object {
        "type": "Date",
      },
    },
    Object {
      "name": "tsquery_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "tsvector_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "txid_snapshot_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "uuid_col",
      "type": Object {
        "type": "string",
      },
    },
    Object {
      "name": "xml_col",
      "type": Object {
        "type": "string",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert enum column sql (SELECT state FROM account_levelisations) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "state",
      "type": Object {
        "items": Array [
          Object {
            "type": "literal",
            "value": "Pending",
          },
          Object {
            "type": "literal",
            "value": "Done",
          },
        ],
        "type": "union",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert enum sql (SELECT 'Pending'::account_levelisation_state) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "items": Array [
          Object {
            "type": "literal",
            "value": "Pending",
          },
          Object {
            "type": "literal",
            "value": "Done",
          },
        ],
        "type": "union",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert function result double sql (SELECT ABS(ABS(integer_col)) FROM all_types) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "abs",
      "type": Object {
        "optional": undefined,
        "type": "number",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert function result single sql (SELECT ABS(integer_col) FROM all_types) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "abs",
      "type": Object {
        "optional": undefined,
        "type": "number",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert nested function explicit type sql (SELECT ARRAY_LENGTH(ARRAY_AGG(integer_col), 1)::int[] FROM all_types GROUP BY id) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "array",
      "type": Object {
        "items": Object {
          "type": "number",
        },
        "type": "array",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert nested function guess type sql (SELECT ABS(ARRAY_LENGTH(ARRAY_AGG(integer_col), 1)) FROM all_types GROUP BY id) 1`] = `
Object {
  "params": Array [],
  "result": Array [
    Object {
      "name": "abs",
      "type": Object {
        "optional": undefined,
        "type": "number",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert operators integer sql (SELECT integer_col + integer_col AS "test1" FROM all_types WHERE id = $id) 1`] = `
Object {
  "params": Array [
    Object {
      "name": "id",
      "required": false,
      "type": Object {
        "optional": false,
        "type": "number",
      },
    },
  ],
  "result": Array [
    Object {
      "name": "test1",
      "type": Object {
        "optional": true,
        "type": "number",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert operators string sql (SELECT integer_varchar + integer_col AS "test1" FROM all_types WHERE integer_varchar = $text) 1`] = `
Object {
  "params": Array [
    Object {
      "name": "text",
      "required": false,
      "type": Object {
        "optional": false,
        "type": "string",
      },
    },
  ],
  "result": Array [
    Object {
      "name": "test1",
      "type": Object {
        "optional": false,
        "type": "string",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert parameter coalesce sql (SELECT character_col FROM all_types WHERE integer_col > COALESCE($id, 2)) 1`] = `
Object {
  "params": Array [
    Object {
      "name": "id",
      "required": false,
      "type": Object {
        "optional": true,
        "type": "number",
      },
    },
  ],
  "result": Array [
    Object {
      "name": "character_col",
      "type": Object {
        "optional": true,
        "type": "string",
      },
    },
  ],
}
`;

exports[`Query Interface Should convert simple sql (SELECT id, character_col FROM all_types WHERE id = :id) 1`] = `
Object {
  "params": Array [
    Object {
      "name": "id",
      "required": false,
      "type": Object {
        "optional": false,
        "type": "number",
      },
    },
  ],
  "result": Array [
    Object {
      "name": "id",
      "type": Object {
        "optional": false,
        "type": "number",
      },
    },
    Object {
      "name": "character_col",
      "type": Object {
        "optional": true,
        "type": "string",
      },
    },
  ],
}
`;
