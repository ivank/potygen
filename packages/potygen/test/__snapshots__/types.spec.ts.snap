// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Query Interface Should load type for aclitem sql 1`] = `
{
  "aclitem": "pg_monitor=r*/pg_read_all_stats",
}
`;

exports[`Query Interface Should load type for aclitem sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "aclitem",
      "type": {
        "postgresType": "aclitem",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for array enums sql 1`] = `
{
  "array": "{Pending,Done}",
}
`;

exports[`Query Interface Should load type for array enums sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "array",
      "type": {
        "items": {
          "postgresType": "any",
          "type": 9,
        },
        "postgresType": "any[]",
        "type": 11,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for array strings sql 1`] = `
{
  "array": [
    "one",
    "two",
  ],
}
`;

exports[`Query Interface Should load type for array strings sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "array",
      "type": {
        "items": {
          "items": [
            {
              "literal": "one",
              "postgresType": "text",
              "type": 2,
            },
            {
              "literal": "two",
              "postgresType": "text",
              "type": 2,
            },
          ],
          "postgresType": "any",
          "type": 12,
        },
        "postgresType": "any[]",
        "type": 11,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for bit sql 1`] = `
{
  "bit": "1",
}
`;

exports[`Query Interface Should load type for bit sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "bit",
      "type": {
        "postgresType": "bit",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for box sql 1`] = `
{
  "box": "(3,4),(1,2)",
}
`;

exports[`Query Interface Should load type for box sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "box",
      "type": {
        "postgresType": "box",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for bpchar sql 1`] = `
{
  "bpchar": "A",
}
`;

exports[`Query Interface Should load type for bpchar sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "bpchar",
      "type": {
        "postgresType": "bpchar",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for bytea sql 1`] = `
{
  "bytea": {
    "data": [
      0,
    ],
    "type": "Buffer",
  },
}
`;

exports[`Query Interface Should load type for bytea sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "bytea",
      "type": {
        "postgresType": "bytea",
        "type": 0,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for cid sql 1`] = `
{
  "cid": "1",
}
`;

exports[`Query Interface Should load type for cid sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "cid",
      "type": {
        "postgresType": "cid",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for cidr sql 1`] = `
{
  "cidr": "1.1.1.1/32",
}
`;

exports[`Query Interface Should load type for cidr sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "cidr",
      "type": {
        "postgresType": "cidr",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for circle sql 1`] = `
{
  "circle": {
    "radius": 3,
    "x": 1,
    "y": 2,
  },
}
`;

exports[`Query Interface Should load type for circle sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "circle",
      "type": {
        "items": [
          {
            "name": "x",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "y",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "radius",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
        ],
        "postgresType": "circle",
        "type": 13,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for cstring sql 1`] = `
{
  "cstring": "1",
}
`;

exports[`Query Interface Should load type for cstring sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "cstring",
      "type": {
        "postgresType": "cstring",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for daterange sql 1`] = `
{
  "daterange": "[2010-01-01,2010-01-02)",
}
`;

exports[`Query Interface Should load type for daterange sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "daterange",
      "type": {
        "postgresType": "daterange",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for inet sql 1`] = `
{
  "inet": "::10.2.3.4",
}
`;

exports[`Query Interface Should load type for inet sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "inet",
      "type": {
        "postgresType": "inet",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for int2vector sql 1`] = `
{
  "int2vector": "1",
}
`;

exports[`Query Interface Should load type for int2vector sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "int2vector",
      "type": {
        "postgresType": "int2vector",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for int4range sql 1`] = `
{
  "int4range": "[1,2)",
}
`;

exports[`Query Interface Should load type for int4range sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "int4range",
      "type": {
        "postgresType": "int4range",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for int8range sql 1`] = `
{
  "int8range": "[1,2)",
}
`;

exports[`Query Interface Should load type for int8range sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "int8range",
      "type": {
        "postgresType": "int8range",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for interval sql 1`] = `
{
  "interval": PostgresInterval {
    "days": 1,
    "hours": 1,
  },
}
`;

exports[`Query Interface Should load type for interval sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "interval",
      "type": {
        "items": [
          {
            "name": "years",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "months",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "days",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "hours",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "minutes",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "seconds",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "milliseconds",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
        ],
        "postgresType": "interval",
        "type": 13,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for line sql 1`] = `
{
  "line": "{1,-1,1}",
}
`;

exports[`Query Interface Should load type for line sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "line",
      "type": {
        "postgresType": "line",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for lseg sql 1`] = `
{
  "lseg": "[(1,2),(3,4)]",
}
`;

exports[`Query Interface Should load type for lseg sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "lseg",
      "type": {
        "postgresType": "lseg",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for macaddr sql 1`] = `
{
  "macaddr": "08:00:2b:01:02:03",
}
`;

exports[`Query Interface Should load type for macaddr sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "macaddr",
      "type": {
        "postgresType": "macaddr",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for macaddr8 sql 1`] = `
{
  "macaddr8": "08:00:2b:01:02:03:04:05",
}
`;

exports[`Query Interface Should load type for macaddr8 sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "macaddr8",
      "type": {
        "postgresType": "macaddr8",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for money sql 1`] = `
{
  "money": "$1.00",
}
`;

exports[`Query Interface Should load type for money sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "money",
      "type": {
        "postgresType": "money",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for name sql 1`] = `
{
  "name": "day",
}
`;

exports[`Query Interface Should load type for name sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "name",
      "type": {
        "postgresType": "name",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for numeric sql 1`] = `
{
  "numeric": "1.2",
}
`;

exports[`Query Interface Should load type for numeric sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "decimal",
      "type": {
        "postgresType": "decimal",
        "type": 3,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for numrange sql 1`] = `
{
  "numrange": "[1,2)",
}
`;

exports[`Query Interface Should load type for numrange sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "numrange",
      "type": {
        "postgresType": "numrange",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for path sql 1`] = `
{
  "path": "[(1,2),(2,3),(3,4)]",
}
`;

exports[`Query Interface Should load type for path sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "path",
      "type": {
        "postgresType": "path",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for pg_lsn sql 1`] = `
{
  "pg_lsn": "16/B374D848",
}
`;

exports[`Query Interface Should load type for pg_lsn sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "pg_lsn",
      "type": {
        "postgresType": "pg_lsn",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for point sql 1`] = `
{
  "point": {
    "x": 1,
    "y": 2,
  },
}
`;

exports[`Query Interface Should load type for point sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "point",
      "type": {
        "items": [
          {
            "name": "x",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
          {
            "name": "y",
            "type": {
              "postgresType": "float4",
              "type": 3,
            },
          },
        ],
        "postgresType": "point",
        "type": 13,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for polygon sql 1`] = `
{
  "polygon": "((1,2),(2,3),(1,2))",
}
`;

exports[`Query Interface Should load type for polygon sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "polygon",
      "type": {
        "postgresType": "polygon",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regclass sql 1`] = `
{
  "regclass": "1",
}
`;

exports[`Query Interface Should load type for regclass sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regclass",
      "type": {
        "postgresType": "regclass",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regconfig sql 1`] = `
{
  "regconfig": "1",
}
`;

exports[`Query Interface Should load type for regconfig sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regconfig",
      "type": {
        "postgresType": "regconfig",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regdictionary sql 1`] = `
{
  "regdictionary": "1",
}
`;

exports[`Query Interface Should load type for regdictionary sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regdictionary",
      "type": {
        "postgresType": "regdictionary",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regnamespace sql 1`] = `
{
  "regnamespace": "1",
}
`;

exports[`Query Interface Should load type for regnamespace sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regnamespace",
      "type": {
        "postgresType": "regnamespace",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regoper sql 1`] = `
{
  "regoper": "1",
}
`;

exports[`Query Interface Should load type for regoper sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regoper",
      "type": {
        "postgresType": "regoper",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regoperator sql 1`] = `
{
  "regoperator": "1",
}
`;

exports[`Query Interface Should load type for regoperator sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regoperator",
      "type": {
        "postgresType": "regoperator",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regproc sql 1`] = `
{
  "regproc": "1",
}
`;

exports[`Query Interface Should load type for regproc sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regproc",
      "type": {
        "postgresType": "regproc",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regprocedure sql 1`] = `
{
  "regprocedure": "1",
}
`;

exports[`Query Interface Should load type for regprocedure sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regprocedure",
      "type": {
        "postgresType": "regprocedure",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regrole sql 1`] = `
{
  "regrole": "1",
}
`;

exports[`Query Interface Should load type for regrole sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regrole",
      "type": {
        "postgresType": "regrole",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regtype sql 1`] = `
{
  "regtype": "1",
}
`;

exports[`Query Interface Should load type for regtype sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "regtype",
      "type": {
        "postgresType": "regtype",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for regtype sql 3`] = `
{
  "regtype": "1",
}
`;

exports[`Query Interface Should load type for regtype sql 4`] = `
{
  "params": [],
  "results": [
    {
      "name": "regtype",
      "type": {
        "postgresType": "regtype",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for tid sql 1`] = `
{
  "tid": "(42,9)",
}
`;

exports[`Query Interface Should load type for tid sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "tid",
      "type": {
        "postgresType": "tid",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for tsrange sql 1`] = `
{
  "tsrange": "["2010-01-01 14:30:00","2010-01-01 15:30:00")",
}
`;

exports[`Query Interface Should load type for tsrange sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "tsrange",
      "type": {
        "postgresType": "tsrange",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for txid_snapshot sql 1`] = `
{
  "txid_snapshot": "10:20:10,14,15",
}
`;

exports[`Query Interface Should load type for txid_snapshot sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "txid_snapshot",
      "type": {
        "postgresType": "txid_snapshot",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for uuid sql 1`] = `
{
  "uuid": "a0eebc99-9c0b-4ef8-bb6d-6bb9bd380a11",
}
`;

exports[`Query Interface Should load type for uuid sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "uuid",
      "type": {
        "postgresType": "uuid",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for varbit sql 1`] = `
{
  "varbit": "111",
}
`;

exports[`Query Interface Should load type for varbit sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "varbit",
      "type": {
        "postgresType": "varbit",
        "type": 2,
      },
    },
  ],
}
`;

exports[`Query Interface Should load type for xid sql 1`] = `
{
  "xid": "1",
}
`;

exports[`Query Interface Should load type for xid sql 2`] = `
{
  "params": [],
  "results": [
    {
      "name": "xid",
      "type": {
        "postgresType": "xid",
        "type": 2,
      },
    },
  ],
}
`;
