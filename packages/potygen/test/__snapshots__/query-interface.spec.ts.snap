// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Query Interface Should convert Coalesce binary expression sql (SELECT COALESCE(numeric_col,0) + COALESCE(numeric_col,0) as "totalPaymentWithVat" FROM all_types) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "totalPaymentWithVat",
      "type": Object {
        "available": Array [
          Array [
            Object {
              "postgresType": "float4",
              "type": 3,
            },
            Object {
              "postgresType": "float4",
              "type": 3,
            },
            Object {
              "postgresType": "float4",
              "type": 3,
            },
          ],
          Array [
            Object {
              "postgresType": "int8",
              "type": 4,
            },
            Object {
              "postgresType": "int8",
              "type": 4,
            },
            Object {
              "postgresType": "float4",
              "type": 3,
            },
          ],
          Array [
            Object {
              "postgresType": "date",
              "type": 6,
            },
            Object {
              "postgresType": "text",
              "type": 2,
            },
            Object {
              "postgresType": "date",
              "type": 6,
            },
          ],
        ],
        "left": Object {
          "items": Array [
            Object {
              "column": "numeric_col",
              "schema": undefined,
              "sourceTag": Object {
                "end": 26,
                "start": 16,
                "tag": "Column",
                "values": Array [
                  Object {
                    "end": 26,
                    "start": 16,
                    "tag": "UnquotedIdentifier",
                    "value": "numeric_col",
                  },
                ],
              },
              "table": undefined,
              "type": 19,
            },
            Object {
              "literal": 0,
              "postgresType": "float4",
              "type": 3,
            },
          ],
          "sourceTag": Object {
            "end": 29,
            "start": 7,
            "tag": "Function",
            "values": Array [
              Object {
                "end": 14,
                "start": 7,
                "tag": "QualifiedIdentifier",
                "values": Array [
                  Object {
                    "end": 14,
                    "start": 7,
                    "tag": "UnquotedIdentifier",
                    "value": "COALESCE",
                  },
                ],
              },
              Object {
                "end": 26,
                "start": 16,
                "tag": "Column",
                "values": Array [
                  Object {
                    "end": 26,
                    "start": 16,
                    "tag": "UnquotedIdentifier",
                    "value": "numeric_col",
                  },
                ],
              },
              Object {
                "end": 28,
                "start": 28,
                "tag": "Number",
                "value": "0",
              },
            ],
          },
          "type": 15,
        },
        "part": 2,
        "right": Object {
          "items": Array [
            Object {
              "column": "numeric_col",
              "schema": undefined,
              "sourceTag": Object {
                "end": 52,
                "start": 42,
                "tag": "Column",
                "values": Array [
                  Object {
                    "end": 52,
                    "start": 42,
                    "tag": "UnquotedIdentifier",
                    "value": "numeric_col",
                  },
                ],
              },
              "table": undefined,
              "type": 19,
            },
            Object {
              "literal": 0,
              "postgresType": "float4",
              "type": 3,
            },
          ],
          "sourceTag": Object {
            "end": 55,
            "start": 33,
            "tag": "Function",
            "values": Array [
              Object {
                "end": 40,
                "start": 33,
                "tag": "QualifiedIdentifier",
                "values": Array [
                  Object {
                    "end": 40,
                    "start": 33,
                    "tag": "UnquotedIdentifier",
                    "value": "COALESCE",
                  },
                ],
              },
              Object {
                "end": 52,
                "start": 42,
                "tag": "Column",
                "values": Array [
                  Object {
                    "end": 52,
                    "start": 42,
                    "tag": "UnquotedIdentifier",
                    "value": "numeric_col",
                  },
                ],
              },
              Object {
                "end": 54,
                "start": 54,
                "tag": "Number",
                "value": "0",
              },
            ],
          },
          "type": 15,
        },
        "sourceTag": Object {
          "end": 55,
          "start": 7,
          "tag": "BinaryExpression",
          "values": Array [
            Object {
              "end": 29,
              "start": 7,
              "tag": "Function",
              "values": Array [
                Object {
                  "end": 14,
                  "start": 7,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 14,
                      "start": 7,
                      "tag": "UnquotedIdentifier",
                      "value": "COALESCE",
                    },
                  ],
                },
                Object {
                  "end": 26,
                  "start": 16,
                  "tag": "Column",
                  "values": Array [
                    Object {
                      "end": 26,
                      "start": 16,
                      "tag": "UnquotedIdentifier",
                      "value": "numeric_col",
                    },
                  ],
                },
                Object {
                  "end": 28,
                  "start": 28,
                  "tag": "Number",
                  "value": "0",
                },
              ],
            },
            Object {
              "end": 31,
              "start": 31,
              "tag": "BinaryOperator",
              "value": "+",
            },
            Object {
              "end": 55,
              "start": 33,
              "tag": "Function",
              "values": Array [
                Object {
                  "end": 40,
                  "start": 33,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 40,
                      "start": 33,
                      "tag": "UnquotedIdentifier",
                      "value": "COALESCE",
                    },
                  ],
                },
                Object {
                  "end": 52,
                  "start": 42,
                  "tag": "Column",
                  "values": Array [
                    Object {
                      "end": 52,
                      "start": 42,
                      "tag": "UnquotedIdentifier",
                      "value": "numeric_col",
                    },
                  ],
                },
                Object {
                  "end": 54,
                  "start": 54,
                  "tag": "Number",
                  "value": "0",
                },
              ],
            },
          ],
        },
        "type": 22,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "all_types",
      "schema": undefined,
      "sourceTag": Object {
        "end": 95,
        "start": 87,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 95,
            "start": 87,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 95,
                "start": 87,
                "tag": "UnquotedIdentifier",
                "value": "all_types",
              },
            ],
          },
        ],
      },
      "table": "all_types",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert Extract const sql (SELECT EXTRACT(CENTURY FROM TIMESTAMP '2000-12-16 12:21:13')) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "date_part",
      "type": Object {
        "name": "date_part",
        "sourceTag": Object {
          "end": 59,
          "start": 7,
          "tag": "Extract",
          "values": Array [
            Object {
              "end": 21,
              "start": 15,
              "tag": "ExtractField",
              "value": "CENTURY",
            },
            Object {
              "end": 58,
              "start": 28,
              "tag": "TypedConstant",
              "values": Array [
                Object {
                  "end": 36,
                  "start": 28,
                  "tag": "ConstantType",
                  "value": "TIMESTAMP",
                },
                Object {
                  "end": 58,
                  "start": 38,
                  "tag": "String",
                  "value": "2000-12-16 12:21:13",
                },
              ],
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "float4",
          "type": 3,
        },
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert between fields not named sql (SELECT FALSE as "col1", TRUE as "col2") 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "literal": false,
        "postgresType": "bool",
        "type": 5,
      },
    },
    Object {
      "name": "col2",
      "type": Object {
        "literal": true,
        "postgresType": "bool",
        "type": 5,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert big int sql (SELECT '123'::int8) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "int8",
      "type": Object {
        "name": "int8",
        "sourceTag": Object {
          "end": 17,
          "start": 14,
          "tag": "Type",
          "values": Array [
            Object {
              "end": 17,
              "start": 14,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 17,
                  "start": 14,
                  "tag": "UnquotedIdentifier",
                  "value": "int8",
                },
              ],
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "int8",
          "type": 4,
        },
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert binary expression column sql (SELECT (col1 + col2) AS "res1" FROM table1) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "res1",
      "type": Object {
        "available": Array [
          Array [
            Object {
              "postgresType": "float4",
              "type": 3,
            },
            Object {
              "postgresType": "float4",
              "type": 3,
            },
            Object {
              "postgresType": "float4",
              "type": 3,
            },
          ],
          Array [
            Object {
              "postgresType": "int8",
              "type": 4,
            },
            Object {
              "postgresType": "int8",
              "type": 4,
            },
            Object {
              "postgresType": "float4",
              "type": 3,
            },
          ],
          Array [
            Object {
              "postgresType": "date",
              "type": 6,
            },
            Object {
              "postgresType": "text",
              "type": 2,
            },
            Object {
              "postgresType": "date",
              "type": 6,
            },
          ],
        ],
        "left": Object {
          "column": "col1",
          "schema": undefined,
          "sourceTag": Object {
            "end": 11,
            "start": 8,
            "tag": "Column",
            "values": Array [
              Object {
                "end": 11,
                "start": 8,
                "tag": "UnquotedIdentifier",
                "value": "col1",
              },
            ],
          },
          "table": undefined,
          "type": 19,
        },
        "part": 2,
        "right": Object {
          "column": "col2",
          "schema": undefined,
          "sourceTag": Object {
            "end": 18,
            "start": 15,
            "tag": "Column",
            "values": Array [
              Object {
                "end": 18,
                "start": 15,
                "tag": "UnquotedIdentifier",
                "value": "col2",
              },
            ],
          },
          "table": undefined,
          "type": 19,
        },
        "sourceTag": Object {
          "end": 18,
          "start": 8,
          "tag": "BinaryExpression",
          "values": Array [
            Object {
              "end": 11,
              "start": 8,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 11,
                  "start": 8,
                  "tag": "UnquotedIdentifier",
                  "value": "col1",
                },
              ],
            },
            Object {
              "end": 13,
              "start": 13,
              "tag": "BinaryOperator",
              "value": "+",
            },
            Object {
              "end": 18,
              "start": 15,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 18,
                  "start": 15,
                  "tag": "UnquotedIdentifier",
                  "value": "col2",
                },
              ],
            },
          ],
        },
        "type": 22,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 41,
        "start": 36,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 41,
            "start": 36,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 41,
                "start": 36,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert binary expression numbers sql (SELECT 1+2) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "postgresType": "float4",
        "type": 3,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert binary expression string sql (SELECT 'test' || 'other') 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "postgresType": "text",
        "type": 2,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert boolean fields mixed sql (SELECT FALSE, TRUE as "col2") 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "bool",
      "type": Object {
        "literal": false,
        "postgresType": "bool",
        "type": 5,
      },
    },
    Object {
      "name": "col2",
      "type": Object {
        "literal": true,
        "postgresType": "bool",
        "type": 5,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert boolean fields named sql (SELECT FALSE as "col1", TRUE as "col2") 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "literal": false,
        "postgresType": "bool",
        "type": 5,
      },
    },
    Object {
      "name": "col2",
      "type": Object {
        "literal": true,
        "postgresType": "bool",
        "type": 5,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert boolean fields not named sql (SELECT FALSE, TRUE) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "bool",
      "type": Object {
        "literal": false,
        "postgresType": "bool",
        "type": 5,
      },
    },
    Object {
      "name": "bool",
      "type": Object {
        "literal": true,
        "postgresType": "bool",
        "type": 5,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert case columns sql (
        SELECT
          CASE col1
            WHEN 12 THEN table1.col1
            WHEN 20 THEN col2
            ELSE 'other'
          END AS "res1"
        FROM table1
      ) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "res1",
      "type": Object {
        "items": Array [
          Object {
            "column": "col1",
            "schema": undefined,
            "sourceTag": Object {
              "end": 71,
              "start": 61,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 66,
                  "start": 61,
                  "tag": "UnquotedIdentifier",
                  "value": "table1",
                },
                Object {
                  "end": 71,
                  "start": 68,
                  "tag": "UnquotedIdentifier",
                  "value": "col1",
                },
              ],
            },
            "table": "table1",
            "type": 19,
          },
          Object {
            "column": "col2",
            "schema": undefined,
            "sourceTag": Object {
              "end": 101,
              "start": 98,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 101,
                  "start": 98,
                  "tag": "UnquotedIdentifier",
                  "value": "col2",
                },
              ],
            },
            "table": undefined,
            "type": 19,
          },
          Object {
            "literal": "other",
            "postgresType": "text",
            "type": 2,
          },
        ],
        "sourceTag": Object {
          "end": 140,
          "start": 26,
          "tag": "CaseSimple",
          "values": Array [
            Object {
              "end": 34,
              "start": 31,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 34,
                  "start": 31,
                  "tag": "UnquotedIdentifier",
                  "value": "col1",
                },
              ],
            },
            Object {
              "end": 71,
              "start": 48,
              "tag": "When",
              "values": Array [
                Object {
                  "end": 54,
                  "start": 53,
                  "tag": "Number",
                  "value": "12",
                },
                Object {
                  "end": 71,
                  "start": 61,
                  "tag": "Column",
                  "values": Array [
                    Object {
                      "end": 66,
                      "start": 61,
                      "tag": "UnquotedIdentifier",
                      "value": "table1",
                    },
                    Object {
                      "end": 71,
                      "start": 68,
                      "tag": "UnquotedIdentifier",
                      "value": "col1",
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 101,
              "start": 85,
              "tag": "When",
              "values": Array [
                Object {
                  "end": 91,
                  "start": 90,
                  "tag": "Number",
                  "value": "20",
                },
                Object {
                  "end": 101,
                  "start": 98,
                  "tag": "Column",
                  "values": Array [
                    Object {
                      "end": 101,
                      "start": 98,
                      "tag": "UnquotedIdentifier",
                      "value": "col2",
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 126,
              "start": 115,
              "tag": "Else",
              "values": Array [
                Object {
                  "end": 126,
                  "start": 120,
                  "tag": "String",
                  "value": "other",
                },
              ],
            },
          ],
        },
        "type": 28,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 170,
        "start": 165,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 170,
            "start": 165,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 170,
                "start": 165,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert case sql (SELECT CASE WHEN TRUE THEN TRUE ELSE 'other' END) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "items": Array [
          Object {
            "literal": true,
            "postgresType": "bool",
            "type": 5,
          },
          Object {
            "literal": "other",
            "postgresType": "text",
            "type": 2,
          },
        ],
        "sourceTag": Object {
          "end": 47,
          "start": 7,
          "tag": "Case",
          "values": Array [
            Object {
              "end": 30,
              "start": 12,
              "tag": "When",
              "values": Array [
                Object {
                  "end": 20,
                  "start": 17,
                  "tag": "Boolean",
                  "value": "TRUE",
                },
                Object {
                  "end": 30,
                  "start": 27,
                  "tag": "Boolean",
                  "value": "TRUE",
                },
              ],
            },
            Object {
              "end": 43,
              "start": 32,
              "tag": "Else",
              "values": Array [
                Object {
                  "end": 43,
                  "start": 37,
                  "tag": "String",
                  "value": "other",
                },
              ],
            },
          ],
        },
        "type": 28,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert cast with schema sql (SELECT 'text'::information_schema.sql_identifier) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "row",
      "type": Object {
        "name": "sql_identifier",
        "schema": "information_schema",
        "sourceTag": Object {
          "end": 47,
          "start": 15,
          "tag": "Type",
          "values": Array [
            Object {
              "end": 47,
              "start": 15,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 32,
                  "start": 15,
                  "tag": "UnquotedIdentifier",
                  "value": "information_schema",
                },
                Object {
                  "end": 47,
                  "start": 34,
                  "tag": "UnquotedIdentifier",
                  "value": "sql_identifier",
                },
              ],
            },
          ],
        },
        "type": 17,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert combination select sql (
        SELECT
          col1 AS "res1",
          (SELECT id FROM table2 JOIN table3 ON table3.id = table2.id AND table3.val > :joinVal LIMIT 1)
        FROM table1
        UNION
        SELECT
          col1 AS "res1",
          table4.col2
        FROM table4
        WHERE :id = table1.id AND table4.id = :id
      ) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 136,
      "name": "joinVal",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 129,
      "type": Object {
        "column": "val",
        "schema": undefined,
        "sourceTag": Object {
          "end": 125,
          "start": 116,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 121,
              "start": 116,
              "tag": "UnquotedIdentifier",
              "value": "table3",
            },
            Object {
              "end": 125,
              "start": 123,
              "tag": "UnquotedIdentifier",
              "value": "val",
            },
          ],
        },
        "table": "table3",
        "type": 19,
      },
    },
    Object {
      "end": 280,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 278,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 292,
          "start": 284,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 289,
              "start": 284,
              "tag": "UnquotedIdentifier",
              "value": "table1",
            },
            Object {
              "end": 292,
              "start": 291,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
    Object {
      "end": 312,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 310,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 306,
          "start": 298,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 303,
              "start": 298,
              "tag": "UnquotedIdentifier",
              "value": "table4",
            },
            Object {
              "end": 306,
              "start": 305,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table4",
        "type": 19,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "res1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 29,
          "start": 26,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 29,
              "start": 26,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
    Object {
      "name": "id",
      "type": Object {
        "nullable": true,
        "sourceTag": Object {
          "end": 144,
          "start": 53,
          "tag": "Select",
          "values": Array [
            Object {
              "end": 61,
              "start": 60,
              "tag": "SelectList",
              "values": Array [
                Object {
                  "end": 61,
                  "start": 60,
                  "tag": "SelectListItem",
                  "values": Array [
                    Object {
                      "end": 61,
                      "start": 60,
                      "tag": "Column",
                      "values": Array [
                        Object {
                          "end": 61,
                          "start": 60,
                          "tag": "UnquotedIdentifier",
                          "value": "id",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 136,
              "start": 63,
              "tag": "From",
              "values": Array [
                Object {
                  "end": 73,
                  "start": 68,
                  "tag": "FromList",
                  "values": Array [
                    Object {
                      "end": 73,
                      "start": 68,
                      "tag": "Table",
                      "values": Array [
                        Object {
                          "end": 73,
                          "start": 68,
                          "tag": "QualifiedIdentifier",
                          "values": Array [
                            Object {
                              "end": 73,
                              "start": 68,
                              "tag": "UnquotedIdentifier",
                              "value": "table2",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "end": 136,
                  "start": 75,
                  "tag": "Join",
                  "values": Array [
                    Object {
                      "end": 78,
                      "start": 75,
                      "tag": "JoinType",
                      "value": "JOIN",
                    },
                    Object {
                      "end": 85,
                      "start": 80,
                      "tag": "Table",
                      "values": Array [
                        Object {
                          "end": 85,
                          "start": 80,
                          "tag": "QualifiedIdentifier",
                          "values": Array [
                            Object {
                              "end": 85,
                              "start": 80,
                              "tag": "UnquotedIdentifier",
                              "value": "table3",
                            },
                          ],
                        },
                      ],
                    },
                    Object {
                      "end": 136,
                      "start": 87,
                      "tag": "JoinOn",
                      "values": Array [
                        Object {
                          "end": 136,
                          "start": 90,
                          "tag": "BinaryExpression",
                          "values": Array [
                            Object {
                              "end": 110,
                              "start": 90,
                              "tag": "BinaryExpression",
                              "values": Array [
                                Object {
                                  "end": 98,
                                  "start": 90,
                                  "tag": "Column",
                                  "values": Array [
                                    Object {
                                      "end": 95,
                                      "start": 90,
                                      "tag": "UnquotedIdentifier",
                                      "value": "table3",
                                    },
                                    Object {
                                      "end": 98,
                                      "start": 97,
                                      "tag": "UnquotedIdentifier",
                                      "value": "id",
                                    },
                                  ],
                                },
                                Object {
                                  "end": 100,
                                  "start": 100,
                                  "tag": "BinaryOperator",
                                  "value": "=",
                                },
                                Object {
                                  "end": 110,
                                  "start": 102,
                                  "tag": "Column",
                                  "values": Array [
                                    Object {
                                      "end": 107,
                                      "start": 102,
                                      "tag": "UnquotedIdentifier",
                                      "value": "table2",
                                    },
                                    Object {
                                      "end": 110,
                                      "start": 109,
                                      "tag": "UnquotedIdentifier",
                                      "value": "id",
                                    },
                                  ],
                                },
                              ],
                            },
                            Object {
                              "end": 114,
                              "start": 112,
                              "tag": "BinaryOperator",
                              "value": "AND",
                            },
                            Object {
                              "end": 136,
                              "start": 116,
                              "tag": "BinaryExpression",
                              "values": Array [
                                Object {
                                  "end": 125,
                                  "start": 116,
                                  "tag": "Column",
                                  "values": Array [
                                    Object {
                                      "end": 121,
                                      "start": 116,
                                      "tag": "UnquotedIdentifier",
                                      "value": "table3",
                                    },
                                    Object {
                                      "end": 125,
                                      "start": 123,
                                      "tag": "UnquotedIdentifier",
                                      "value": "val",
                                    },
                                  ],
                                },
                                Object {
                                  "end": 127,
                                  "start": 127,
                                  "tag": "BinaryOperator",
                                  "value": ">",
                                },
                                Object {
                                  "end": 136,
                                  "pick": Array [],
                                  "required": false,
                                  "start": 129,
                                  "tag": "Parameter",
                                  "type": "single",
                                  "value": "joinVal",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 144,
              "start": 138,
              "tag": "Limit",
              "values": Array [
                Object {
                  "end": 144,
                  "start": 144,
                  "tag": "Count",
                  "values": Array [
                    Object {
                      "end": 144,
                      "start": 144,
                      "tag": "Integer",
                      "value": "1",
                    },
                  ],
                },
              ],
            },
          ],
        },
        "type": 30,
        "value": Object {
          "column": "id",
          "schema": undefined,
          "sourceTag": Object {
            "end": 61,
            "start": 60,
            "tag": "Column",
            "values": Array [
              Object {
                "end": 61,
                "start": 60,
                "tag": "UnquotedIdentifier",
                "value": "id",
              },
            ],
          },
          "table": undefined,
          "type": 19,
        },
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table2",
      "schema": undefined,
      "sourceTag": Object {
        "end": 73,
        "start": 68,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 73,
            "start": 68,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 73,
                "start": 68,
                "tag": "UnquotedIdentifier",
                "value": "table2",
              },
            ],
          },
        ],
      },
      "table": "table2",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "table3",
      "schema": undefined,
      "sourceTag": Object {
        "end": 85,
        "start": 80,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 85,
            "start": 80,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 85,
                "start": 80,
                "tag": "UnquotedIdentifier",
                "value": "table3",
              },
            ],
          },
        ],
      },
      "table": "table3",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 165,
        "start": 160,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 165,
            "start": 160,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 165,
                "start": 160,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "table4",
      "schema": undefined,
      "sourceTag": Object {
        "end": 262,
        "start": 257,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 262,
            "start": 257,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 262,
                "start": 257,
                "tag": "UnquotedIdentifier",
                "value": "table4",
              },
            ],
          },
        ],
      },
      "table": "table4",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert complex row sql (SELECT (1, 2+2, :param1), ROW (123), (1,2,(3))) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 22,
      "name": "param1",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 16,
      "type": Object {
        "postgresType": "any",
        "type": 9,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "row",
      "type": Object {
        "name": "row",
        "sourceTag": Object {
          "end": 23,
          "start": 7,
          "tag": "Row",
          "values": Array [
            Object {
              "end": 8,
              "start": 8,
              "tag": "Number",
              "value": "1",
            },
            Object {
              "end": 13,
              "start": 11,
              "tag": "BinaryExpression",
              "values": Array [
                Object {
                  "end": 11,
                  "start": 11,
                  "tag": "Number",
                  "value": "2",
                },
                Object {
                  "end": 12,
                  "start": 12,
                  "tag": "BinaryOperator",
                  "value": "+",
                },
                Object {
                  "end": 13,
                  "start": 13,
                  "tag": "Number",
                  "value": "2",
                },
              ],
            },
            Object {
              "end": 22,
              "pick": Array [],
              "required": false,
              "start": 16,
              "tag": "Parameter",
              "type": "single",
              "value": "param1",
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "row",
          "type": 2,
        },
      },
    },
    Object {
      "name": "row",
      "type": Object {
        "name": "row",
        "sourceTag": Object {
          "end": 34,
          "start": 26,
          "tag": "RowKeyward",
          "values": Array [
            Object {
              "end": 33,
              "start": 31,
              "tag": "Number",
              "value": "123",
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "row",
          "type": 2,
        },
      },
    },
    Object {
      "name": "row",
      "type": Object {
        "name": "row",
        "sourceTag": Object {
          "end": 45,
          "start": 37,
          "tag": "Row",
          "values": Array [
            Object {
              "end": 38,
              "start": 38,
              "tag": "Number",
              "value": "1",
            },
            Object {
              "end": 40,
              "start": 40,
              "tag": "Number",
              "value": "2",
            },
            Object {
              "end": 44,
              "start": 42,
              "tag": "WrappedExpression",
              "values": Array [
                Object {
                  "end": 43,
                  "start": 43,
                  "tag": "Number",
                  "value": "3",
                },
              ],
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "row",
          "type": 2,
        },
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert composite type from table sql (SELECT (item).supplier_id FROM all_types) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "supplier_id",
      "type": Object {
        "name": "supplier_id",
        "sourceTag": Object {
          "end": 24,
          "start": 7,
          "tag": "WrappedExpression",
          "values": Array [
            Object {
              "end": 11,
              "start": 8,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 11,
                  "start": 8,
                  "tag": "UnquotedIdentifier",
                  "value": "item",
                },
              ],
            },
            Object {
              "end": 24,
              "start": 13,
              "tag": "CompositeAccess",
              "values": Array [
                Object {
                  "end": 24,
                  "start": 14,
                  "tag": "UnquotedIdentifier",
                  "value": "supplier_id",
                },
              ],
            },
          ],
        },
        "type": 27,
        "value": Object {
          "column": "item",
          "schema": undefined,
          "sourceTag": Object {
            "end": 11,
            "start": 8,
            "tag": "Column",
            "values": Array [
              Object {
                "end": 11,
                "start": 8,
                "tag": "UnquotedIdentifier",
                "value": "item",
              },
            ],
          },
          "table": undefined,
          "type": 19,
        },
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "all_types",
      "schema": undefined,
      "sourceTag": Object {
        "end": 39,
        "start": 31,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 39,
            "start": 31,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 39,
                "start": 31,
                "tag": "UnquotedIdentifier",
                "value": "all_types",
              },
            ],
          },
        ],
      },
      "table": "all_types",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert cte with values sql (WITH ins(id, val) AS (VALUES (1::int, 2::int),(3::int, 4::int)) SELECT * FROM ins) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "schema": undefined,
        "sourceTag": Object {
          "end": 71,
          "start": 71,
          "tag": "StarIdentifier",
          "values": Array [
            Object {
              "end": 71,
              "start": 71,
              "tag": "Star",
            },
          ],
        },
        "table": undefined,
        "type": 20,
      },
    },
  ],
  "sources": Array [
    Object {
      "name": "ins",
      "sourceTag": Object {
        "end": 62,
        "start": 5,
        "tag": "CTE",
        "values": Array [
          Object {
            "end": 16,
            "start": 5,
            "tag": "CTEName",
            "values": Array [
              Object {
                "end": 7,
                "start": 5,
                "tag": "UnquotedIdentifier",
                "value": "ins",
              },
              Object {
                "end": 16,
                "start": 8,
                "tag": "Columns",
                "values": Array [
                  Object {
                    "end": 10,
                    "start": 9,
                    "tag": "UnquotedIdentifier",
                    "value": "id",
                  },
                  Object {
                    "end": 15,
                    "start": 13,
                    "tag": "UnquotedIdentifier",
                    "value": "val",
                  },
                ],
              },
            ],
          },
          Object {
            "end": 61,
            "start": 22,
            "tag": "CTEValuesList",
            "values": Array [
              Object {
                "end": 44,
                "start": 29,
                "tag": "CTEValues",
                "values": Array [
                  Object {
                    "end": 36,
                    "start": 30,
                    "tag": "PgCast",
                    "values": Array [
                      Object {
                        "end": 30,
                        "start": 30,
                        "tag": "Number",
                        "value": "1",
                      },
                      Object {
                        "end": 35,
                        "start": 33,
                        "tag": "Type",
                        "values": Array [
                          Object {
                            "end": 35,
                            "start": 33,
                            "tag": "QualifiedIdentifier",
                            "values": Array [
                              Object {
                                "end": 35,
                                "start": 33,
                                "tag": "UnquotedIdentifier",
                                "value": "int",
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "end": 44,
                    "start": 38,
                    "tag": "PgCast",
                    "values": Array [
                      Object {
                        "end": 38,
                        "start": 38,
                        "tag": "Number",
                        "value": "2",
                      },
                      Object {
                        "end": 43,
                        "start": 41,
                        "tag": "Type",
                        "values": Array [
                          Object {
                            "end": 43,
                            "start": 41,
                            "tag": "QualifiedIdentifier",
                            "values": Array [
                              Object {
                                "end": 43,
                                "start": 41,
                                "tag": "UnquotedIdentifier",
                                "value": "int",
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              Object {
                "end": 61,
                "start": 46,
                "tag": "CTEValues",
                "values": Array [
                  Object {
                    "end": 53,
                    "start": 47,
                    "tag": "PgCast",
                    "values": Array [
                      Object {
                        "end": 47,
                        "start": 47,
                        "tag": "Number",
                        "value": "3",
                      },
                      Object {
                        "end": 52,
                        "start": 50,
                        "tag": "Type",
                        "values": Array [
                          Object {
                            "end": 52,
                            "start": 50,
                            "tag": "QualifiedIdentifier",
                            "values": Array [
                              Object {
                                "end": 52,
                                "start": 50,
                                "tag": "UnquotedIdentifier",
                                "value": "int",
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                  Object {
                    "end": 61,
                    "start": 55,
                    "tag": "PgCast",
                    "values": Array [
                      Object {
                        "end": 55,
                        "start": 55,
                        "tag": "Number",
                        "value": "4",
                      },
                      Object {
                        "end": 60,
                        "start": 58,
                        "tag": "Type",
                        "values": Array [
                          Object {
                            "end": 60,
                            "start": 58,
                            "tag": "QualifiedIdentifier",
                            "values": Array [
                              Object {
                                "end": 60,
                                "start": 58,
                                "tag": "UnquotedIdentifier",
                                "value": "int",
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
            ],
          },
        ],
      },
      "type": "Values",
      "types": Array [
        Object {
          "name": "id",
          "sourceTag": Object {
            "end": 36,
            "start": 30,
            "tag": "PgCast",
            "values": Array [
              Object {
                "end": 30,
                "start": 30,
                "tag": "Number",
                "value": "1",
              },
              Object {
                "end": 35,
                "start": 33,
                "tag": "Type",
                "values": Array [
                  Object {
                    "end": 35,
                    "start": 33,
                    "tag": "QualifiedIdentifier",
                    "values": Array [
                      Object {
                        "end": 35,
                        "start": 33,
                        "tag": "UnquotedIdentifier",
                        "value": "int",
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "type": 23,
          "value": Object {
            "name": "int4",
            "sourceTag": Object {
              "end": 35,
              "start": 33,
              "tag": "Type",
              "values": Array [
                Object {
                  "end": 35,
                  "start": 33,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 35,
                      "start": 33,
                      "tag": "UnquotedIdentifier",
                      "value": "int",
                    },
                  ],
                },
              ],
            },
            "type": 23,
            "value": Object {
              "postgresType": "int4",
              "type": 3,
            },
          },
        },
        Object {
          "name": "val",
          "sourceTag": Object {
            "end": 44,
            "start": 38,
            "tag": "PgCast",
            "values": Array [
              Object {
                "end": 38,
                "start": 38,
                "tag": "Number",
                "value": "2",
              },
              Object {
                "end": 43,
                "start": 41,
                "tag": "Type",
                "values": Array [
                  Object {
                    "end": 43,
                    "start": 41,
                    "tag": "QualifiedIdentifier",
                    "values": Array [
                      Object {
                        "end": 43,
                        "start": 41,
                        "tag": "UnquotedIdentifier",
                        "value": "int",
                      },
                    ],
                  },
                ],
              },
            ],
          },
          "type": 23,
          "value": Object {
            "name": "int4",
            "sourceTag": Object {
              "end": 43,
              "start": 41,
              "tag": "Type",
              "values": Array [
                Object {
                  "end": 43,
                  "start": 41,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 43,
                      "start": 41,
                      "tag": "UnquotedIdentifier",
                      "value": "int",
                    },
                  ],
                },
              ],
            },
            "type": 23,
            "value": Object {
              "postgresType": "int4",
              "type": 3,
            },
          },
        },
      ],
    },
  ],
}
`;

exports[`Query Interface Should convert delete with param sql (DELETE FROM table1 WHERE id = :id) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 32,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 30,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 26,
          "start": 25,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 26,
              "start": 25,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
  ],
  "results": Array [],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 17,
        "start": 12,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 17,
            "start": 12,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 17,
                "start": 12,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert delete with returning sql (DELETE FROM table1 RETURNING id, col2) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "id",
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 30,
          "start": 29,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 30,
              "start": 29,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
    Object {
      "name": "col2",
      "type": Object {
        "column": "col2",
        "schema": undefined,
        "sourceTag": Object {
          "end": 36,
          "start": 33,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 36,
              "start": 33,
              "tag": "UnquotedIdentifier",
              "value": "col2",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 17,
        "start": 12,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 17,
            "start": 12,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 17,
                "start": 12,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert double percision sql (SELECT '123'::double precision) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "float8",
      "type": Object {
        "name": "float8",
        "sourceTag": Object {
          "end": 29,
          "start": 14,
          "tag": "Type",
          "values": Array [
            Object {
              "end": 29,
              "start": 14,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 29,
                  "start": 14,
                  "tag": "UnquotedIdentifier",
                  "value": "double precision",
                },
              ],
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "float8",
          "type": 3,
        },
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert enum type sql (SELECT id::custom_type FROM table1) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "id",
      "type": Object {
        "column": Object {
          "column": "id",
          "schema": undefined,
          "sourceTag": Object {
            "end": 8,
            "start": 7,
            "tag": "Column",
            "values": Array [
              Object {
                "end": 8,
                "start": 7,
                "tag": "UnquotedIdentifier",
                "value": "id",
              },
            ],
          },
          "table": undefined,
          "type": 19,
        },
        "sourceTag": Object {
          "end": 22,
          "start": 7,
          "tag": "PgCast",
          "values": Array [
            Object {
              "end": 8,
              "start": 7,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 8,
                  "start": 7,
                  "tag": "UnquotedIdentifier",
                  "value": "id",
                },
              ],
            },
            Object {
              "end": 21,
              "start": 11,
              "tag": "Type",
              "values": Array [
                Object {
                  "end": 21,
                  "start": 11,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 21,
                      "start": 11,
                      "tag": "UnquotedIdentifier",
                      "value": "custom_type",
                    },
                  ],
                },
              ],
            },
          ],
        },
        "type": 16,
        "value": Object {
          "name": "custom_type",
          "schema": undefined,
          "sourceTag": Object {
            "end": 21,
            "start": 11,
            "tag": "Type",
            "values": Array [
              Object {
                "end": 21,
                "start": 11,
                "tag": "QualifiedIdentifier",
                "values": Array [
                  Object {
                    "end": 21,
                    "start": 11,
                    "tag": "UnquotedIdentifier",
                    "value": "custom_type",
                  },
                ],
              },
            ],
          },
          "type": 17,
        },
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 33,
        "start": 28,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 33,
            "start": 28,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 33,
                "start": 28,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert from select sql (SELECT id FROM all_types) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "id",
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 8,
          "start": 7,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 8,
              "start": 7,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "all_types",
      "schema": undefined,
      "sourceTag": Object {
        "end": 23,
        "start": 15,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 23,
            "start": 15,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 23,
                "start": 15,
                "tag": "UnquotedIdentifier",
                "value": "all_types",
              },
            ],
          },
        ],
      },
      "table": "all_types",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert function param sql (SELECT ABS($id) FROM table1) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 13,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 11,
      "type": Object {
        "args": Array [
          Object {
            "postgresType": "any",
            "type": 1,
          },
        ],
        "index": 0,
        "name": "abs",
        "sourceTag": Object {
          "end": 13,
          "pick": Array [],
          "required": false,
          "start": 11,
          "tag": "Parameter",
          "type": "single",
          "value": "id",
        },
        "type": 21,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "abs",
      "type": Object {
        "args": Array [
          Object {
            "postgresType": "any",
            "type": 1,
          },
        ],
        "name": "abs",
        "schema": undefined,
        "sourceTag": Object {
          "end": 14,
          "start": 7,
          "tag": "Function",
          "values": Array [
            Object {
              "end": 9,
              "start": 7,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 9,
                  "start": 7,
                  "tag": "UnquotedIdentifier",
                  "value": "ABS",
                },
              ],
            },
            Object {
              "end": 13,
              "pick": Array [],
              "required": false,
              "start": 11,
              "tag": "Parameter",
              "type": "single",
              "value": "id",
            },
          ],
        },
        "type": 18,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 26,
        "start": 21,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 26,
            "start": 21,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 26,
                "start": 21,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert function sql (SELECT ABS(id) FROM table1) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "abs",
      "type": Object {
        "args": Array [
          Object {
            "column": "id",
            "schema": undefined,
            "sourceTag": Object {
              "end": 12,
              "start": 11,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 12,
                  "start": 11,
                  "tag": "UnquotedIdentifier",
                  "value": "id",
                },
              ],
            },
            "table": undefined,
            "type": 19,
          },
        ],
        "name": "abs",
        "schema": undefined,
        "sourceTag": Object {
          "end": 13,
          "start": 7,
          "tag": "Function",
          "values": Array [
            Object {
              "end": 9,
              "start": 7,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 9,
                  "start": 7,
                  "tag": "UnquotedIdentifier",
                  "value": "ABS",
                },
              ],
            },
            Object {
              "end": 12,
              "start": 11,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 12,
                  "start": 11,
                  "tag": "UnquotedIdentifier",
                  "value": "id",
                },
              ],
            },
          ],
        },
        "type": 18,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 25,
        "start": 20,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 25,
            "start": 20,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 25,
                "start": 20,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert function with schema sql (SELECT information_schema._pg_char_max_length('123')) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "_pg_char_max_length",
      "type": Object {
        "args": Array [
          Object {
            "literal": "123",
            "postgresType": "text",
            "type": 2,
          },
        ],
        "name": "_pg_char_max_length",
        "schema": "information_schema",
        "sourceTag": Object {
          "end": 51,
          "start": 7,
          "tag": "Function",
          "values": Array [
            Object {
              "end": 44,
              "start": 7,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 24,
                  "start": 7,
                  "tag": "UnquotedIdentifier",
                  "value": "information_schema",
                },
                Object {
                  "end": 44,
                  "start": 26,
                  "tag": "UnquotedIdentifier",
                  "value": "_pg_char_max_length",
                },
              ],
            },
            Object {
              "end": 50,
              "start": 46,
              "tag": "String",
              "value": "123",
            },
          ],
        },
        "type": 18,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert function with star sql (SELECT information_schema._pg_truetypmod(a.*, t.*) FROM table1) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "_pg_truetypmod",
      "type": Object {
        "args": Array [
          Object {
            "schema": undefined,
            "sourceTag": Object {
              "end": 43,
              "start": 41,
              "tag": "StarIdentifier",
              "values": Array [
                Object {
                  "end": 41,
                  "start": 41,
                  "tag": "UnquotedIdentifier",
                  "value": "a",
                },
                Object {
                  "end": 43,
                  "start": 43,
                  "tag": "Star",
                },
              ],
            },
            "table": "a",
            "type": 20,
          },
          Object {
            "schema": undefined,
            "sourceTag": Object {
              "end": 48,
              "start": 46,
              "tag": "StarIdentifier",
              "values": Array [
                Object {
                  "end": 46,
                  "start": 46,
                  "tag": "UnquotedIdentifier",
                  "value": "t",
                },
                Object {
                  "end": 48,
                  "start": 48,
                  "tag": "Star",
                },
              ],
            },
            "table": "t",
            "type": 20,
          },
        ],
        "name": "_pg_truetypmod",
        "schema": "information_schema",
        "sourceTag": Object {
          "end": 49,
          "start": 7,
          "tag": "Function",
          "values": Array [
            Object {
              "end": 39,
              "start": 7,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 24,
                  "start": 7,
                  "tag": "UnquotedIdentifier",
                  "value": "information_schema",
                },
                Object {
                  "end": 39,
                  "start": 26,
                  "tag": "UnquotedIdentifier",
                  "value": "_pg_truetypmod",
                },
              ],
            },
            Object {
              "end": 43,
              "start": 41,
              "tag": "StarIdentifier",
              "values": Array [
                Object {
                  "end": 41,
                  "start": 41,
                  "tag": "UnquotedIdentifier",
                  "value": "a",
                },
                Object {
                  "end": 43,
                  "start": 43,
                  "tag": "Star",
                },
              ],
            },
            Object {
              "end": 48,
              "start": 46,
              "tag": "StarIdentifier",
              "values": Array [
                Object {
                  "end": 46,
                  "start": 46,
                  "tag": "UnquotedIdentifier",
                  "value": "t",
                },
                Object {
                  "end": 48,
                  "start": 48,
                  "tag": "Star",
                },
              ],
            },
          ],
        },
        "type": 18,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 61,
        "start": 56,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 61,
            "start": 56,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 61,
                "start": 56,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert insert multiple param values sql (INSERT INTO table1 VALUES $$rows(name, test)) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 43,
      "name": "rows",
      "pick": Array [
        Object {
          "name": "name",
          "type": Object {
            "postgresType": "any",
            "type": 9,
          },
        },
        Object {
          "name": "test",
          "type": Object {
            "postgresType": "any",
            "type": 9,
          },
        },
      ],
      "required": true,
      "spread": true,
      "start": 26,
      "type": Object {
        "postgresType": "any",
        "type": 9,
      },
    },
  ],
  "results": Array [],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 17,
        "start": 12,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 17,
            "start": 12,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 17,
                "start": 12,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert insert returning star sql (INSERT INTO table1 (id) VALUES (1),(2) RETURNING *) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "schema": undefined,
        "sourceTag": Object {
          "end": 49,
          "start": 49,
          "tag": "StarIdentifier",
          "values": Array [
            Object {
              "end": 49,
              "start": 49,
              "tag": "Star",
            },
          ],
        },
        "table": undefined,
        "type": 20,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 17,
        "start": 12,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 17,
            "start": 12,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 17,
                "start": 12,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert join fields sql (
        SELECT
          t1.col1 as "col1",
          t1.col2 as "myCol2",
          table2.col2 as "other"
        FROM table1 AS t1
        JOIN table2 ON table2.id = table1.id
      ) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 32,
          "start": 26,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 27,
              "start": 26,
              "tag": "UnquotedIdentifier",
              "value": "t1",
            },
            Object {
              "end": 32,
              "start": 29,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": "t1",
        "type": 19,
      },
    },
    Object {
      "name": "myCol2",
      "type": Object {
        "column": "col2",
        "schema": undefined,
        "sourceTag": Object {
          "end": 61,
          "start": 55,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 56,
              "start": 55,
              "tag": "UnquotedIdentifier",
              "value": "t1",
            },
            Object {
              "end": 61,
              "start": 58,
              "tag": "UnquotedIdentifier",
              "value": "col2",
            },
          ],
        },
        "table": "t1",
        "type": 19,
      },
    },
    Object {
      "name": "other",
      "type": Object {
        "column": "col2",
        "schema": undefined,
        "sourceTag": Object {
          "end": 96,
          "start": 86,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 91,
              "start": 86,
              "tag": "UnquotedIdentifier",
              "value": "table2",
            },
            Object {
              "end": 96,
              "start": 93,
              "tag": "UnquotedIdentifier",
              "value": "col2",
            },
          ],
        },
        "table": "table2",
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "t1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 133,
        "start": 122,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 127,
            "start": 122,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 127,
                "start": 122,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
          Object {
            "end": 133,
            "start": 129,
            "tag": "As",
            "values": Array [
              Object {
                "end": 133,
                "start": 132,
                "tag": "UnquotedIdentifier",
                "value": "t1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "table2",
      "schema": undefined,
      "sourceTag": Object {
        "end": 153,
        "start": 148,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 153,
            "start": 148,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 153,
                "start": 148,
                "tag": "UnquotedIdentifier",
                "value": "table2",
              },
            ],
          },
        ],
      },
      "table": "table2",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert join with aliases fields sql (
        SELECT
          t1.col1 as "col1",
          t1.col2 as "myCol2",
          myT2.col2 as "other",
          myT4.col_9 as "test"
        FROM fit.table1 AS t1
        JOIN fit.table2 as "myT2" ON table2.id = table1.id
        JOIN table3 as "myT4" ON myT2.id = table1.id
      ) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 32,
          "start": 26,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 27,
              "start": 26,
              "tag": "UnquotedIdentifier",
              "value": "t1",
            },
            Object {
              "end": 32,
              "start": 29,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": "t1",
        "type": 19,
      },
    },
    Object {
      "name": "myCol2",
      "type": Object {
        "column": "col2",
        "schema": undefined,
        "sourceTag": Object {
          "end": 61,
          "start": 55,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 56,
              "start": 55,
              "tag": "UnquotedIdentifier",
              "value": "t1",
            },
            Object {
              "end": 61,
              "start": 58,
              "tag": "UnquotedIdentifier",
              "value": "col2",
            },
          ],
        },
        "table": "t1",
        "type": 19,
      },
    },
    Object {
      "name": "other",
      "type": Object {
        "column": "col2",
        "schema": undefined,
        "sourceTag": Object {
          "end": 94,
          "start": 86,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 89,
              "start": 86,
              "tag": "UnquotedIdentifier",
              "value": "myT2",
            },
            Object {
              "end": 94,
              "start": 91,
              "tag": "UnquotedIdentifier",
              "value": "col2",
            },
          ],
        },
        "table": "myT2",
        "type": 19,
      },
    },
    Object {
      "name": "test",
      "type": Object {
        "column": "col_9",
        "schema": undefined,
        "sourceTag": Object {
          "end": 127,
          "start": 118,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 121,
              "start": 118,
              "tag": "UnquotedIdentifier",
              "value": "myT4",
            },
            Object {
              "end": 127,
              "start": 123,
              "tag": "UnquotedIdentifier",
              "value": "col_9",
            },
          ],
        },
        "table": "myT4",
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "t1",
      "schema": "fit",
      "sourceTag": Object {
        "end": 167,
        "start": 152,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 161,
            "start": 152,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 154,
                "start": 152,
                "tag": "UnquotedIdentifier",
                "value": "fit",
              },
              Object {
                "end": 161,
                "start": 156,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
          Object {
            "end": 167,
            "start": 163,
            "tag": "As",
            "values": Array [
              Object {
                "end": 167,
                "start": 166,
                "tag": "UnquotedIdentifier",
                "value": "t1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "myT2",
      "schema": "fit",
      "sourceTag": Object {
        "end": 201,
        "start": 182,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 191,
            "start": 182,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 184,
                "start": 182,
                "tag": "UnquotedIdentifier",
                "value": "fit",
              },
              Object {
                "end": 191,
                "start": 186,
                "tag": "UnquotedIdentifier",
                "value": "table2",
              },
            ],
          },
          Object {
            "end": 201,
            "start": 193,
            "tag": "As",
            "values": Array [
              Object {
                "end": 201,
                "start": 196,
                "tag": "QuotedIdentifier",
                "value": "myT2",
              },
            ],
          },
        ],
      },
      "table": "table2",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "myT4",
      "schema": undefined,
      "sourceTag": Object {
        "end": 256,
        "start": 241,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 246,
            "start": 241,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 246,
                "start": 241,
                "tag": "UnquotedIdentifier",
                "value": "table3",
              },
            ],
          },
          Object {
            "end": 256,
            "start": 248,
            "tag": "As",
            "values": Array [
              Object {
                "end": 256,
                "start": 251,
                "tag": "QuotedIdentifier",
                "value": "myT4",
              },
            ],
          },
        ],
      },
      "table": "table3",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert limit and offset params sql (SELECT id FROM table1 LIMIT :limit OFFSET :offset::int) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 33,
      "name": "limit",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 28,
      "type": Object {
        "postgresType": "text",
        "type": 2,
      },
    },
    Object {
      "end": 48,
      "name": "offset",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 42,
      "type": Object {
        "name": "int4",
        "sourceTag": Object {
          "end": 53,
          "start": 51,
          "tag": "Type",
          "values": Array [
            Object {
              "end": 53,
              "start": 51,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 53,
                  "start": 51,
                  "tag": "UnquotedIdentifier",
                  "value": "int",
                },
              ],
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "int4",
          "type": 3,
        },
      },
    },
  ],
  "results": Array [
    Object {
      "name": "id",
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 8,
          "start": 7,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 8,
              "start": 7,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 20,
        "start": 15,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 20,
            "start": 15,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 20,
                "start": 15,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert multiple params infer type from one 1 sql (SELECT col1 FROM table1 WHERE :id = table1.id AND :id) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 32,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 30,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 44,
          "start": 36,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 41,
              "start": 36,
              "tag": "UnquotedIdentifier",
              "value": "table1",
            },
            Object {
              "end": 44,
              "start": 43,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
    Object {
      "end": 52,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 50,
      "type": Object {
        "postgresType": "any",
        "type": 1,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 10,
          "start": 7,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 10,
              "start": 7,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 22,
        "start": 17,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 22,
            "start": 17,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 22,
                "start": 17,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert multiple params infer type from one 2 sql (SELECT col1 FROM table1 WHERE :id IS NOT NULL OR :id = table1.id) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 32,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 30,
      "type": Object {
        "postgresType": "any",
        "type": 1,
      },
    },
    Object {
      "end": 51,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 49,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 63,
          "start": 55,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 60,
              "start": 55,
              "tag": "UnquotedIdentifier",
              "value": "table1",
            },
            Object {
              "end": 63,
              "start": 62,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 10,
          "start": 7,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 10,
              "start": 7,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 22,
        "start": 17,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 22,
            "start": 17,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 22,
                "start": 17,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert multiple params sql (SELECT :test1 AS "res1", :test2) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 12,
      "name": "test1",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 7,
      "type": Object {
        "postgresType": "any",
        "type": 9,
      },
    },
    Object {
      "end": 30,
      "name": "test2",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 25,
      "type": Object {
        "postgresType": "any",
        "type": 9,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "res1",
      "type": Object {
        "postgresType": "any",
        "type": 1,
      },
    },
    Object {
      "name": "?column?",
      "type": Object {
        "postgresType": "any",
        "type": 1,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert nested functions sql (SELECT ABS(ARRAY_LENGTH(ARRAY_AGG(integer_col), 1)) FROM all_types GROUP BY id) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "abs",
      "type": Object {
        "args": Array [
          Object {
            "args": Array [
              Object {
                "items": Object {
                  "column": "integer_col",
                  "schema": undefined,
                  "sourceTag": Object {
                    "end": 44,
                    "start": 34,
                    "tag": "Column",
                    "values": Array [
                      Object {
                        "end": 44,
                        "start": 34,
                        "tag": "UnquotedIdentifier",
                        "value": "integer_col",
                      },
                    ],
                  },
                  "table": undefined,
                  "type": 19,
                },
                "sourceTag": Object {
                  "end": 45,
                  "start": 24,
                  "tag": "Function",
                  "values": Array [
                    Object {
                      "end": 32,
                      "start": 24,
                      "tag": "QualifiedIdentifier",
                      "values": Array [
                        Object {
                          "end": 32,
                          "start": 24,
                          "tag": "UnquotedIdentifier",
                          "value": "ARRAY_AGG",
                        },
                      ],
                    },
                    Object {
                      "end": 44,
                      "start": 34,
                      "tag": "Column",
                      "values": Array [
                        Object {
                          "end": 44,
                          "start": 34,
                          "tag": "UnquotedIdentifier",
                          "value": "integer_col",
                        },
                      ],
                    },
                  ],
                },
                "type": 25,
              },
              Object {
                "literal": 1,
                "postgresType": "float4",
                "type": 3,
              },
            ],
            "name": "array_length",
            "schema": undefined,
            "sourceTag": Object {
              "end": 49,
              "start": 11,
              "tag": "Function",
              "values": Array [
                Object {
                  "end": 22,
                  "start": 11,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 22,
                      "start": 11,
                      "tag": "UnquotedIdentifier",
                      "value": "ARRAY_LENGTH",
                    },
                  ],
                },
                Object {
                  "end": 45,
                  "start": 24,
                  "tag": "Function",
                  "values": Array [
                    Object {
                      "end": 32,
                      "start": 24,
                      "tag": "QualifiedIdentifier",
                      "values": Array [
                        Object {
                          "end": 32,
                          "start": 24,
                          "tag": "UnquotedIdentifier",
                          "value": "ARRAY_AGG",
                        },
                      ],
                    },
                    Object {
                      "end": 44,
                      "start": 34,
                      "tag": "Column",
                      "values": Array [
                        Object {
                          "end": 44,
                          "start": 34,
                          "tag": "UnquotedIdentifier",
                          "value": "integer_col",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "end": 48,
                  "start": 48,
                  "tag": "Number",
                  "value": "1",
                },
              ],
            },
            "type": 18,
          },
        ],
        "name": "abs",
        "schema": undefined,
        "sourceTag": Object {
          "end": 50,
          "start": 7,
          "tag": "Function",
          "values": Array [
            Object {
              "end": 9,
              "start": 7,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 9,
                  "start": 7,
                  "tag": "UnquotedIdentifier",
                  "value": "ABS",
                },
              ],
            },
            Object {
              "end": 49,
              "start": 11,
              "tag": "Function",
              "values": Array [
                Object {
                  "end": 22,
                  "start": 11,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 22,
                      "start": 11,
                      "tag": "UnquotedIdentifier",
                      "value": "ARRAY_LENGTH",
                    },
                  ],
                },
                Object {
                  "end": 45,
                  "start": 24,
                  "tag": "Function",
                  "values": Array [
                    Object {
                      "end": 32,
                      "start": 24,
                      "tag": "QualifiedIdentifier",
                      "values": Array [
                        Object {
                          "end": 32,
                          "start": 24,
                          "tag": "UnquotedIdentifier",
                          "value": "ARRAY_AGG",
                        },
                      ],
                    },
                    Object {
                      "end": 44,
                      "start": 34,
                      "tag": "Column",
                      "values": Array [
                        Object {
                          "end": 44,
                          "start": 34,
                          "tag": "UnquotedIdentifier",
                          "value": "integer_col",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "end": 48,
                  "start": 48,
                  "tag": "Number",
                  "value": "1",
                },
              ],
            },
          ],
        },
        "type": 18,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "all_types",
      "schema": undefined,
      "sourceTag": Object {
        "end": 65,
        "start": 57,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 65,
            "start": 57,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 65,
                "start": 57,
                "tag": "UnquotedIdentifier",
                "value": "all_types",
              },
            ],
          },
        ],
      },
      "table": "all_types",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert nested select sql (
        SELECT
          col1 AS "res1",
          (SELECT id FROM table2 JOIN table3 ON table3.id = table2.id AND table3.val > :joinVal LIMIT 1)
        FROM table1
        WHERE :id = table1.id
      ) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 136,
      "name": "joinVal",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 129,
      "type": Object {
        "column": "val",
        "schema": undefined,
        "sourceTag": Object {
          "end": 125,
          "start": 116,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 121,
              "start": 116,
              "tag": "UnquotedIdentifier",
              "value": "table3",
            },
            Object {
              "end": 125,
              "start": 123,
              "tag": "UnquotedIdentifier",
              "value": "val",
            },
          ],
        },
        "table": "table3",
        "type": 19,
      },
    },
    Object {
      "end": 183,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 181,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 195,
          "start": 187,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 192,
              "start": 187,
              "tag": "UnquotedIdentifier",
              "value": "table1",
            },
            Object {
              "end": 195,
              "start": 194,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "res1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 29,
          "start": 26,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 29,
              "start": 26,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
    Object {
      "name": "id",
      "type": Object {
        "nullable": true,
        "sourceTag": Object {
          "end": 144,
          "start": 53,
          "tag": "Select",
          "values": Array [
            Object {
              "end": 61,
              "start": 60,
              "tag": "SelectList",
              "values": Array [
                Object {
                  "end": 61,
                  "start": 60,
                  "tag": "SelectListItem",
                  "values": Array [
                    Object {
                      "end": 61,
                      "start": 60,
                      "tag": "Column",
                      "values": Array [
                        Object {
                          "end": 61,
                          "start": 60,
                          "tag": "UnquotedIdentifier",
                          "value": "id",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 136,
              "start": 63,
              "tag": "From",
              "values": Array [
                Object {
                  "end": 73,
                  "start": 68,
                  "tag": "FromList",
                  "values": Array [
                    Object {
                      "end": 73,
                      "start": 68,
                      "tag": "Table",
                      "values": Array [
                        Object {
                          "end": 73,
                          "start": 68,
                          "tag": "QualifiedIdentifier",
                          "values": Array [
                            Object {
                              "end": 73,
                              "start": 68,
                              "tag": "UnquotedIdentifier",
                              "value": "table2",
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "end": 136,
                  "start": 75,
                  "tag": "Join",
                  "values": Array [
                    Object {
                      "end": 78,
                      "start": 75,
                      "tag": "JoinType",
                      "value": "JOIN",
                    },
                    Object {
                      "end": 85,
                      "start": 80,
                      "tag": "Table",
                      "values": Array [
                        Object {
                          "end": 85,
                          "start": 80,
                          "tag": "QualifiedIdentifier",
                          "values": Array [
                            Object {
                              "end": 85,
                              "start": 80,
                              "tag": "UnquotedIdentifier",
                              "value": "table3",
                            },
                          ],
                        },
                      ],
                    },
                    Object {
                      "end": 136,
                      "start": 87,
                      "tag": "JoinOn",
                      "values": Array [
                        Object {
                          "end": 136,
                          "start": 90,
                          "tag": "BinaryExpression",
                          "values": Array [
                            Object {
                              "end": 110,
                              "start": 90,
                              "tag": "BinaryExpression",
                              "values": Array [
                                Object {
                                  "end": 98,
                                  "start": 90,
                                  "tag": "Column",
                                  "values": Array [
                                    Object {
                                      "end": 95,
                                      "start": 90,
                                      "tag": "UnquotedIdentifier",
                                      "value": "table3",
                                    },
                                    Object {
                                      "end": 98,
                                      "start": 97,
                                      "tag": "UnquotedIdentifier",
                                      "value": "id",
                                    },
                                  ],
                                },
                                Object {
                                  "end": 100,
                                  "start": 100,
                                  "tag": "BinaryOperator",
                                  "value": "=",
                                },
                                Object {
                                  "end": 110,
                                  "start": 102,
                                  "tag": "Column",
                                  "values": Array [
                                    Object {
                                      "end": 107,
                                      "start": 102,
                                      "tag": "UnquotedIdentifier",
                                      "value": "table2",
                                    },
                                    Object {
                                      "end": 110,
                                      "start": 109,
                                      "tag": "UnquotedIdentifier",
                                      "value": "id",
                                    },
                                  ],
                                },
                              ],
                            },
                            Object {
                              "end": 114,
                              "start": 112,
                              "tag": "BinaryOperator",
                              "value": "AND",
                            },
                            Object {
                              "end": 136,
                              "start": 116,
                              "tag": "BinaryExpression",
                              "values": Array [
                                Object {
                                  "end": 125,
                                  "start": 116,
                                  "tag": "Column",
                                  "values": Array [
                                    Object {
                                      "end": 121,
                                      "start": 116,
                                      "tag": "UnquotedIdentifier",
                                      "value": "table3",
                                    },
                                    Object {
                                      "end": 125,
                                      "start": 123,
                                      "tag": "UnquotedIdentifier",
                                      "value": "val",
                                    },
                                  ],
                                },
                                Object {
                                  "end": 127,
                                  "start": 127,
                                  "tag": "BinaryOperator",
                                  "value": ">",
                                },
                                Object {
                                  "end": 136,
                                  "pick": Array [],
                                  "required": false,
                                  "start": 129,
                                  "tag": "Parameter",
                                  "type": "single",
                                  "value": "joinVal",
                                },
                              ],
                            },
                          ],
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 144,
              "start": 138,
              "tag": "Limit",
              "values": Array [
                Object {
                  "end": 144,
                  "start": 144,
                  "tag": "Count",
                  "values": Array [
                    Object {
                      "end": 144,
                      "start": 144,
                      "tag": "Integer",
                      "value": "1",
                    },
                  ],
                },
              ],
            },
          ],
        },
        "type": 30,
        "value": Object {
          "column": "id",
          "schema": undefined,
          "sourceTag": Object {
            "end": 61,
            "start": 60,
            "tag": "Column",
            "values": Array [
              Object {
                "end": 61,
                "start": 60,
                "tag": "UnquotedIdentifier",
                "value": "id",
              },
            ],
          },
          "table": undefined,
          "type": 19,
        },
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table2",
      "schema": undefined,
      "sourceTag": Object {
        "end": 73,
        "start": 68,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 73,
            "start": 68,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 73,
                "start": 68,
                "tag": "UnquotedIdentifier",
                "value": "table2",
              },
            ],
          },
        ],
      },
      "table": "table2",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "table3",
      "schema": undefined,
      "sourceTag": Object {
        "end": 85,
        "start": 80,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 85,
            "start": 80,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 85,
                "start": 80,
                "tag": "UnquotedIdentifier",
                "value": "table3",
              },
            ],
          },
        ],
      },
      "table": "table3",
      "type": "Table",
    },
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 165,
        "start": 160,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 165,
            "start": 160,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 165,
                "start": 160,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert nested typed array param in select sql (SELECT :param::int[][][]) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 12,
      "name": "param",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 7,
      "type": Object {
        "items": Object {
          "items": Object {
            "items": Object {
              "name": "int4",
              "sourceTag": Object {
                "end": 17,
                "start": 15,
                "tag": "Type",
                "values": Array [
                  Object {
                    "end": 17,
                    "start": 15,
                    "tag": "QualifiedIdentifier",
                    "values": Array [
                      Object {
                        "end": 17,
                        "start": 15,
                        "tag": "UnquotedIdentifier",
                        "value": "int",
                      },
                    ],
                  },
                ],
              },
              "type": 23,
              "value": Object {
                "postgresType": "int4",
                "type": 3,
              },
            },
            "sourceTag": Object {
              "end": 23,
              "start": 15,
              "tag": "ArrayType",
              "values": Array [
                Object {
                  "end": 17,
                  "start": 15,
                  "tag": "Type",
                  "values": Array [
                    Object {
                      "end": 17,
                      "start": 15,
                      "tag": "QualifiedIdentifier",
                      "values": Array [
                        Object {
                          "end": 17,
                          "start": 15,
                          "tag": "UnquotedIdentifier",
                          "value": "int",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "end": 19,
                  "start": 18,
                  "tag": "Dimension",
                },
                Object {
                  "end": 21,
                  "start": 20,
                  "tag": "Dimension",
                },
                Object {
                  "end": 23,
                  "start": 22,
                  "tag": "Dimension",
                },
              ],
            },
            "type": 24,
          },
          "sourceTag": Object {
            "end": 23,
            "start": 15,
            "tag": "ArrayType",
            "values": Array [
              Object {
                "end": 17,
                "start": 15,
                "tag": "Type",
                "values": Array [
                  Object {
                    "end": 17,
                    "start": 15,
                    "tag": "QualifiedIdentifier",
                    "values": Array [
                      Object {
                        "end": 17,
                        "start": 15,
                        "tag": "UnquotedIdentifier",
                        "value": "int",
                      },
                    ],
                  },
                ],
              },
              Object {
                "end": 19,
                "start": 18,
                "tag": "Dimension",
              },
              Object {
                "end": 21,
                "start": 20,
                "tag": "Dimension",
              },
              Object {
                "end": 23,
                "start": 22,
                "tag": "Dimension",
              },
            ],
          },
          "type": 24,
        },
        "sourceTag": Object {
          "end": 23,
          "start": 15,
          "tag": "ArrayType",
          "values": Array [
            Object {
              "end": 17,
              "start": 15,
              "tag": "Type",
              "values": Array [
                Object {
                  "end": 17,
                  "start": 15,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 17,
                      "start": 15,
                      "tag": "UnquotedIdentifier",
                      "value": "int",
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 19,
              "start": 18,
              "tag": "Dimension",
            },
            Object {
              "end": 21,
              "start": 20,
              "tag": "Dimension",
            },
            Object {
              "end": 23,
              "start": 22,
              "tag": "Dimension",
            },
          ],
        },
        "type": 24,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "array",
      "type": Object {
        "items": Object {
          "items": Object {
            "items": Object {
              "name": "int4",
              "sourceTag": Object {
                "end": 17,
                "start": 15,
                "tag": "Type",
                "values": Array [
                  Object {
                    "end": 17,
                    "start": 15,
                    "tag": "QualifiedIdentifier",
                    "values": Array [
                      Object {
                        "end": 17,
                        "start": 15,
                        "tag": "UnquotedIdentifier",
                        "value": "int",
                      },
                    ],
                  },
                ],
              },
              "type": 23,
              "value": Object {
                "postgresType": "int4",
                "type": 3,
              },
            },
            "sourceTag": Object {
              "end": 23,
              "start": 15,
              "tag": "ArrayType",
              "values": Array [
                Object {
                  "end": 17,
                  "start": 15,
                  "tag": "Type",
                  "values": Array [
                    Object {
                      "end": 17,
                      "start": 15,
                      "tag": "QualifiedIdentifier",
                      "values": Array [
                        Object {
                          "end": 17,
                          "start": 15,
                          "tag": "UnquotedIdentifier",
                          "value": "int",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "end": 19,
                  "start": 18,
                  "tag": "Dimension",
                },
                Object {
                  "end": 21,
                  "start": 20,
                  "tag": "Dimension",
                },
                Object {
                  "end": 23,
                  "start": 22,
                  "tag": "Dimension",
                },
              ],
            },
            "type": 24,
          },
          "sourceTag": Object {
            "end": 23,
            "start": 15,
            "tag": "ArrayType",
            "values": Array [
              Object {
                "end": 17,
                "start": 15,
                "tag": "Type",
                "values": Array [
                  Object {
                    "end": 17,
                    "start": 15,
                    "tag": "QualifiedIdentifier",
                    "values": Array [
                      Object {
                        "end": 17,
                        "start": 15,
                        "tag": "UnquotedIdentifier",
                        "value": "int",
                      },
                    ],
                  },
                ],
              },
              Object {
                "end": 19,
                "start": 18,
                "tag": "Dimension",
              },
              Object {
                "end": 21,
                "start": 20,
                "tag": "Dimension",
              },
              Object {
                "end": 23,
                "start": 22,
                "tag": "Dimension",
              },
            ],
          },
          "type": 24,
        },
        "sourceTag": Object {
          "end": 23,
          "start": 15,
          "tag": "ArrayType",
          "values": Array [
            Object {
              "end": 17,
              "start": 15,
              "tag": "Type",
              "values": Array [
                Object {
                  "end": 17,
                  "start": 15,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 17,
                      "start": 15,
                      "tag": "UnquotedIdentifier",
                      "value": "int",
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 19,
              "start": 18,
              "tag": "Dimension",
            },
            Object {
              "end": 21,
              "start": 20,
              "tag": "Dimension",
            },
            Object {
              "end": 23,
              "start": 22,
              "tag": "Dimension",
            },
          ],
        },
        "type": 24,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert numeric sql (SELECT '123'::numeric) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "decimal",
      "type": Object {
        "name": "decimal",
        "sourceTag": Object {
          "end": 20,
          "start": 14,
          "tag": "Type",
          "values": Array [
            Object {
              "end": 20,
              "start": 14,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 20,
                  "start": 14,
                  "tag": "UnquotedIdentifier",
                  "value": "numeric",
                },
              ],
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "decimal",
          "type": 3,
        },
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert order by with params sql (SELECT * FROM table1 ORDER BY CASE WHEN $param1 = 'val1' AND $param2 = 'DESC' THEN col2 END DESC) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 46,
      "name": "param1",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 40,
      "type": Object {
        "literal": "val1",
        "postgresType": "text",
        "type": 2,
      },
    },
    Object {
      "end": 67,
      "name": "param2",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 61,
      "type": Object {
        "literal": "DESC",
        "postgresType": "text",
        "type": 2,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "schema": undefined,
        "sourceTag": Object {
          "end": 7,
          "start": 7,
          "tag": "StarIdentifier",
          "values": Array [
            Object {
              "end": 7,
              "start": 7,
              "tag": "Star",
            },
          ],
        },
        "table": undefined,
        "type": 20,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 19,
        "start": 14,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 19,
            "start": 14,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 19,
                "start": 14,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert params in array range sql (SELECT (ARRAY[1,2,3,4])[$from:3]) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 28,
      "name": "from",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 24,
      "type": Object {
        "postgresType": "any",
        "type": 9,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "array",
      "type": Object {
        "sourceTag": Object {
          "end": 31,
          "start": 7,
          "tag": "WrappedExpression",
          "values": Array [
            Object {
              "end": 21,
              "start": 8,
              "tag": "ArrayConstructor",
              "values": Array [
                Object {
                  "end": 14,
                  "start": 14,
                  "tag": "Number",
                  "value": "1",
                },
                Object {
                  "end": 16,
                  "start": 16,
                  "tag": "Number",
                  "value": "2",
                },
                Object {
                  "end": 18,
                  "start": 18,
                  "tag": "Number",
                  "value": "3",
                },
                Object {
                  "end": 20,
                  "start": 20,
                  "tag": "Number",
                  "value": "4",
                },
              ],
            },
            Object {
              "end": 31,
              "start": 23,
              "tag": "ArrayIndex",
              "values": Array [
                Object {
                  "end": 30,
                  "start": 24,
                  "tag": "ArrayIndexRange",
                  "values": Array [
                    Object {
                      "end": 28,
                      "pick": Array [],
                      "required": false,
                      "start": 24,
                      "tag": "Parameter",
                      "type": "single",
                      "value": "from",
                    },
                    Object {
                      "end": 30,
                      "start": 30,
                      "tag": "Number",
                      "value": "3",
                    },
                  ],
                },
              ],
            },
          ],
        },
        "type": 26,
        "value": Object {
          "items": Object {
            "items": Array [
              Object {
                "literal": 1,
                "postgresType": "float4",
                "type": 3,
              },
              Object {
                "literal": 2,
                "postgresType": "float4",
                "type": 3,
              },
              Object {
                "literal": 3,
                "postgresType": "float4",
                "type": 3,
              },
              Object {
                "literal": 4,
                "postgresType": "float4",
                "type": 3,
              },
            ],
            "sourceTag": Object {
              "end": 21,
              "start": 8,
              "tag": "ArrayConstructor",
              "values": Array [
                Object {
                  "end": 14,
                  "start": 14,
                  "tag": "Number",
                  "value": "1",
                },
                Object {
                  "end": 16,
                  "start": 16,
                  "tag": "Number",
                  "value": "2",
                },
                Object {
                  "end": 18,
                  "start": 18,
                  "tag": "Number",
                  "value": "3",
                },
                Object {
                  "end": 20,
                  "start": 20,
                  "tag": "Number",
                  "value": "4",
                },
              ],
            },
            "type": 28,
          },
          "sourceTag": Object {
            "end": 21,
            "start": 8,
            "tag": "ArrayConstructor",
            "values": Array [
              Object {
                "end": 14,
                "start": 14,
                "tag": "Number",
                "value": "1",
              },
              Object {
                "end": 16,
                "start": 16,
                "tag": "Number",
                "value": "2",
              },
              Object {
                "end": 18,
                "start": 18,
                "tag": "Number",
                "value": "3",
              },
              Object {
                "end": 20,
                "start": 20,
                "tag": "Number",
                "value": "4",
              },
            ],
          },
          "type": 24,
        },
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert simple delete sql (DELETE FROM table1) 1`] = `
Object {
  "params": Array [],
  "results": Array [],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 17,
        "start": 12,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 17,
            "start": 12,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 17,
                "start": 12,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert single param sql (SELECT :test1 AS "res1") 1`] = `
Object {
  "params": Array [
    Object {
      "end": 12,
      "name": "test1",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 7,
      "type": Object {
        "postgresType": "any",
        "type": 9,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "res1",
      "type": Object {
        "postgresType": "any",
        "type": 1,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert star sql (SELECT * FROM table1) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "schema": undefined,
        "sourceTag": Object {
          "end": 7,
          "start": 7,
          "tag": "StarIdentifier",
          "values": Array [
            Object {
              "end": 7,
              "start": 7,
              "tag": "Star",
            },
          ],
        },
        "table": undefined,
        "type": 20,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 19,
        "start": 14,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 19,
            "start": 14,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 19,
                "start": 14,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert static fields sql (SELECT col1 as "col1", col2 as "myCol2" FROM table1) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 10,
          "start": 7,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 10,
              "start": 7,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
    Object {
      "name": "myCol2",
      "type": Object {
        "column": "col2",
        "schema": undefined,
        "sourceTag": Object {
          "end": 26,
          "start": 23,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 26,
              "start": 23,
              "tag": "UnquotedIdentifier",
              "value": "col2",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 50,
        "start": 45,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 50,
            "start": 45,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 50,
                "start": 45,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert string fields not named sql (SELECT 'test', $$Dianne's horse$$, $SomeTag$Dianne's horse$SomeTag$) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "literal": "test",
        "postgresType": "text",
        "type": 2,
      },
    },
    Object {
      "name": "?column?",
      "type": Object {
        "literal": "Dianne's horse",
        "postgresType": "text",
        "type": 2,
      },
    },
    Object {
      "name": "?column?",
      "type": Object {
        "literal": "Dianne's horse",
        "postgresType": "text",
        "type": 2,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert typed array param in select sql (SELECT :param::int[]) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 12,
      "name": "param",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 7,
      "type": Object {
        "items": Object {
          "name": "int4",
          "sourceTag": Object {
            "end": 17,
            "start": 15,
            "tag": "Type",
            "values": Array [
              Object {
                "end": 17,
                "start": 15,
                "tag": "QualifiedIdentifier",
                "values": Array [
                  Object {
                    "end": 17,
                    "start": 15,
                    "tag": "UnquotedIdentifier",
                    "value": "int",
                  },
                ],
              },
            ],
          },
          "type": 23,
          "value": Object {
            "postgresType": "int4",
            "type": 3,
          },
        },
        "sourceTag": Object {
          "end": 19,
          "start": 15,
          "tag": "ArrayType",
          "values": Array [
            Object {
              "end": 17,
              "start": 15,
              "tag": "Type",
              "values": Array [
                Object {
                  "end": 17,
                  "start": 15,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 17,
                      "start": 15,
                      "tag": "UnquotedIdentifier",
                      "value": "int",
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 19,
              "start": 18,
              "tag": "Dimension",
            },
          ],
        },
        "type": 24,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "array",
      "type": Object {
        "items": Object {
          "name": "int4",
          "sourceTag": Object {
            "end": 17,
            "start": 15,
            "tag": "Type",
            "values": Array [
              Object {
                "end": 17,
                "start": 15,
                "tag": "QualifiedIdentifier",
                "values": Array [
                  Object {
                    "end": 17,
                    "start": 15,
                    "tag": "UnquotedIdentifier",
                    "value": "int",
                  },
                ],
              },
            ],
          },
          "type": 23,
          "value": Object {
            "postgresType": "int4",
            "type": 3,
          },
        },
        "sourceTag": Object {
          "end": 19,
          "start": 15,
          "tag": "ArrayType",
          "values": Array [
            Object {
              "end": 17,
              "start": 15,
              "tag": "Type",
              "values": Array [
                Object {
                  "end": 17,
                  "start": 15,
                  "tag": "QualifiedIdentifier",
                  "values": Array [
                    Object {
                      "end": 17,
                      "start": 15,
                      "tag": "UnquotedIdentifier",
                      "value": "int",
                    },
                  ],
                },
              ],
            },
            Object {
              "end": 19,
              "start": 18,
              "tag": "Dimension",
            },
          ],
        },
        "type": 24,
      },
    },
  ],
  "sources": Array [],
}
`;

exports[`Query Interface Should convert typed param in where sql (SELECT col1 FROM table1 WHERE :id::int IS NOT NULL) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 32,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 30,
      "type": Object {
        "name": "int4",
        "sourceTag": Object {
          "end": 37,
          "start": 35,
          "tag": "Type",
          "values": Array [
            Object {
              "end": 37,
              "start": 35,
              "tag": "QualifiedIdentifier",
              "values": Array [
                Object {
                  "end": 37,
                  "start": 35,
                  "tag": "UnquotedIdentifier",
                  "value": "int",
                },
              ],
            },
          ],
        },
        "type": 23,
        "value": Object {
          "postgresType": "int4",
          "type": 3,
        },
      },
    },
  ],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 10,
          "start": 7,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 10,
              "start": 7,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 22,
        "start": 17,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 22,
            "start": 17,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 22,
                "start": 17,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert update returning expression sql (UPDATE table1 SET col1 = 10 RETURNING id, col1, 123 as col2, '2' as col3, 3+4 as col4) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "id",
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 39,
          "start": 38,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 39,
              "start": 38,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 45,
          "start": 42,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 45,
              "start": 42,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
    Object {
      "name": "col2",
      "type": Object {
        "literal": 123,
        "postgresType": "float4",
        "type": 3,
      },
    },
    Object {
      "name": "col3",
      "type": Object {
        "literal": "2",
        "postgresType": "text",
        "type": 2,
      },
    },
    Object {
      "name": "col4",
      "type": Object {
        "postgresType": "float4",
        "type": 3,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 12,
        "start": 7,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 12,
            "start": 7,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 12,
                "start": 7,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert update returning sql (UPDATE table1 SET col1 = 10 RETURNING id, col1) 1`] = `
Object {
  "params": Array [],
  "results": Array [
    Object {
      "name": "id",
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 39,
          "start": 38,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 39,
              "start": 38,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 45,
          "start": 42,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 45,
              "start": 42,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 12,
        "start": 7,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 12,
            "start": 7,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 12,
                "start": 7,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert update returning star sql (UPDATE table1 SET col1 = 10 WHERE id = :id RETURNING *) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 41,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 39,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 35,
          "start": 34,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 35,
              "start": 34,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "schema": undefined,
        "sourceTag": Object {
          "end": 53,
          "start": 53,
          "tag": "StarIdentifier",
          "values": Array [
            Object {
              "end": 53,
              "start": 53,
              "tag": "Star",
            },
          ],
        },
        "table": undefined,
        "type": 20,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 12,
        "start": 7,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 12,
            "start": 7,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 12,
                "start": 7,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert where params sql (
        SELECT col1, col2
        FROM table1
        WHERE
          table1.id = :id
          AND col1 > :val1
      ) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 85,
      "name": "id",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 83,
      "type": Object {
        "column": "id",
        "schema": undefined,
        "sourceTag": Object {
          "end": 79,
          "start": 71,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 76,
              "start": 71,
              "tag": "UnquotedIdentifier",
              "value": "table1",
            },
            Object {
              "end": 79,
              "start": 78,
              "tag": "UnquotedIdentifier",
              "value": "id",
            },
          ],
        },
        "table": "table1",
        "type": 19,
      },
    },
    Object {
      "end": 112,
      "name": "val1",
      "pick": Array [],
      "required": false,
      "spread": false,
      "start": 108,
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 104,
          "start": 101,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 104,
              "start": 101,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "col1",
      "type": Object {
        "column": "col1",
        "schema": undefined,
        "sourceTag": Object {
          "end": 19,
          "start": 16,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 19,
              "start": 16,
              "tag": "UnquotedIdentifier",
              "value": "col1",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
    Object {
      "name": "col2",
      "type": Object {
        "column": "col2",
        "schema": undefined,
        "sourceTag": Object {
          "end": 25,
          "start": 22,
          "tag": "Column",
          "values": Array [
            Object {
              "end": 25,
              "start": 22,
              "tag": "UnquotedIdentifier",
              "value": "col2",
            },
          ],
        },
        "table": undefined,
        "type": 19,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "table1",
      "schema": undefined,
      "sourceTag": Object {
        "end": 45,
        "start": 40,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 45,
            "start": 40,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 45,
                "start": 40,
                "tag": "UnquotedIdentifier",
                "value": "table1",
              },
            ],
          },
        ],
      },
      "table": "table1",
      "type": "Table",
    },
  ],
}
`;

exports[`Query Interface Should convert where pick spread sql (SELECT * FROM all_types WHERE id IN $$ids(id)) 1`] = `
Object {
  "params": Array [
    Object {
      "end": 44,
      "name": "ids",
      "pick": Array [
        Object {
          "name": "id",
          "type": Object {
            "postgresType": "any",
            "type": 9,
          },
        },
      ],
      "required": true,
      "spread": true,
      "start": 36,
      "type": Object {
        "items": Object {
          "column": "id",
          "schema": undefined,
          "sourceTag": Object {
            "end": 31,
            "start": 30,
            "tag": "Column",
            "values": Array [
              Object {
                "end": 31,
                "start": 30,
                "tag": "UnquotedIdentifier",
                "value": "id",
              },
            ],
          },
          "table": undefined,
          "type": 19,
        },
        "sourceTag": Object {
          "end": 44,
          "start": 30,
          "tag": "ComparationArrayInclusion",
          "values": Array [
            Object {
              "end": 31,
              "start": 30,
              "tag": "Column",
              "values": Array [
                Object {
                  "end": 31,
                  "start": 30,
                  "tag": "UnquotedIdentifier",
                  "value": "id",
                },
              ],
            },
            Object {
              "end": 34,
              "start": 33,
              "tag": "ComparationArrayInclusionType",
              "value": "IN",
            },
            Object {
              "end": 44,
              "pick": Array [
                Object {
                  "end": 43,
                  "start": 42,
                  "tag": "UnquotedIdentifier",
                  "value": "id",
                },
              ],
              "required": false,
              "start": 36,
              "tag": "Parameter",
              "type": "spread",
              "value": "ids",
            },
          ],
        },
        "type": 24,
      },
    },
  ],
  "results": Array [
    Object {
      "name": "?column?",
      "type": Object {
        "schema": undefined,
        "sourceTag": Object {
          "end": 7,
          "start": 7,
          "tag": "StarIdentifier",
          "values": Array [
            Object {
              "end": 7,
              "start": 7,
              "tag": "Star",
            },
          ],
        },
        "table": undefined,
        "type": 20,
      },
    },
  ],
  "sources": Array [
    Object {
      "isResult": true,
      "name": "all_types",
      "schema": undefined,
      "sourceTag": Object {
        "end": 22,
        "start": 14,
        "tag": "Table",
        "values": Array [
          Object {
            "end": 22,
            "start": 14,
            "tag": "QualifiedIdentifier",
            "values": Array [
              Object {
                "end": 22,
                "start": 14,
                "tag": "UnquotedIdentifier",
                "value": "all_types",
              },
            ],
          },
        ],
      },
      "table": "all_types",
      "type": "Table",
    },
  ],
}
`;
