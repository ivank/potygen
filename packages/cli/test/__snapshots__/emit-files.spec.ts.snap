// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Load Files Should convert complex sql account-levelisation.update.query.sql: account-levelisation.update.query.sql 1`] = `
"export interface Params {
    isAccepted?: boolean;
    id?: number;
}
export interface Result {
    id: number;
    isAccepted: boolean;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql account-levelisation.upsert.query.sql: account-levelisation.upsert.query.sql 1`] = `
"export interface Params {
    levelisationId?: number;
    start?: Date;
}
export interface Result {
    id: number;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql account-levelisations.query.sql: account-levelisations.query.sql 1`] = `
"import { Json } from \\"@potygen/query\\";
export interface Params {
    q?: \\"\\";
    resolvedPostlev?: \\"\\" | boolean;
    state?: (\\"Pending\\" | \\"Done\\") | (\\"Pending\\" | \\"Done\\");
    levelisationId?: number;
    ids?: number[];
    sortField?: \\"totalPayment\\" | \\"vatPayment\\" | \\"generationPayment\\" | \\"exportPayment\\" | \\"generationEnergy\\" | \\"exportEnergy\\" | \\"cfrFitId\\" | \\"state\\" | \\"isAccepted\\" | \\"error\\" | \\"exportType\\";
    sortOrder?: \\"DESC\\" | \\"ASC\\";
    limit?: number;
    offset?: number;
}
export interface Result<TGenerationPeriods = unknown, TExportPeriods = unknown, TErrorParams = unknown> {
    id: number;
    levelisationId: number;
    accountId: number;
    installationId: number;
    state: \\"Pending\\" | \\"Done\\";
    isAccepted: boolean;
    generationStartReadOn?: Date;
    generationStartReadValue?: string;
    generationEndReadOn?: Date;
    generationEndReadValue?: string;
    generationPercentageSplit?: string;
    generationPayment?: string;
    generationEnergy?: string;
    exportStartReadOn?: Date;
    exportStartReadValue?: string;
    exportEndReadOn?: Date;
    exportEndReadValue?: string;
    exportPercentageSplit?: string;
    exportPayment?: string;
    exportEnergy?: string;
    exportType?: \\"Deemed\\" | \\"Metered Export\\" | \\"Off Grid\\" | \\"PPA\\";
    technologyType?: \\"PV\\" | \\"H\\" | \\"W\\" | \\"AD\\" | \\"CHP\\";
    totalPayment?: string;
    vatPayment?: string;
    generationPeriods?: Json<TGenerationPeriods>;
    exportPeriods?: Json<TExportPeriods>;
    errorCode?: string;
    errorParams?: Json<TErrorParams>;
    cfrFitId: string;
    resolvedPostlevId?: number;
    isBacsPaymentsSent?: boolean;
    isChequePaymentsSent?: boolean;
}
export interface Query<TGenerationPeriods = unknown, TExportPeriods = unknown, TErrorParams = unknown> {
    params: Params;
    result: Result<TGenerationPeriods, TExportPeriods, TErrorParams>;
}
"
`;

exports[`Load Files Should convert complex sql account-levelisations-bulk-close-accounts.query.sql: account-levelisations-bulk-close-accounts.query.sql 1`] = `
"export interface Params {
    ids?: number[];
}
export interface Result {
    id: number;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql account-levelisations-set-bulk-update.query.sql: account-levelisations-set-bulk-update.query.sql 1`] = `
"export interface Params {
    ids?: number[];
}
export interface Result {
    id: number;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql accounts.list.query.sql: accounts.list.query.sql 1`] = `
"export interface Params {
    q?: \\"\\" | string;
    ids?: number[];
}
export interface Result {
    total: number;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql accounts.query.sql: accounts.query.sql 1`] = `
"export interface Params {
    q?: \\"\\" | string;
    ids?: number[];
    limit?: number;
    offset?: number;
}
export interface Result {
    id: number;
    state: \\"Active\\" | \\"Pending\\" | \\"Dispute\\" | \\"Closed\\";
    startOn?: Date;
    firstName: string;
    lastName: string;
    email?: string;
    address: string;
    fitIds: string[];
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql accounts.sql: accounts.sql 1`] = `
"export interface Params {
}
export interface Result {
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql active-meters-wth-reads.query.sql: active-meters-wth-reads.query.sql 1`] = `
"export interface Params {
    intervalStart: Date;
    intervalEnd: Date;
    accountId: number;
    meterId?: number;
}
export interface Result {
    id: number;
    msn: string;
    mpan: string;
    make: string;
    model: string;
    type: \\"Export\\" | \\"Generation\\";
    currentPeriodRead?: {
        id: number;
        value: number;
        dateOn: Date;
        submittedAt?: Date;
        reason?: string;
        type: \\"Opening\\" | \\"Closing\\" | \\"Quarterly\\" | \\"Meter Verification\\";
    };
    previousPeriodRead?: {
        id: number;
        value: number;
        dateOn: Date;
        submittedAt?: Date;
        reason?: string;
        type: \\"Opening\\" | \\"Closing\\" | \\"Quarterly\\" | \\"Meter Verification\\";
    };
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql bacs.query.sql: bacs.query.sql 1`] = `
"export interface Params {
    quarter?: string;
    perPage?: string;
    offset?: string;
}
export interface Result {
    fitId: string;
    name?: string;
    amount: string;
    quarter?: string;
    bankDetails: string;
    addressLine1?: string;
    addressLine2?: string;
    addressLine3?: string;
    postcode: string;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql contracts.sql: contracts.sql 1`] = `
"export interface Params {
}
export interface Result {
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql delete-accounts.query.sql: delete-accounts.query.sql 1`] = `
"export interface Params {
    type?: \\"FIT\\" | \\"SEG\\";
    state?: \\"Active\\" | \\"Pending\\" | \\"Dispute\\" | \\"Closed\\";
}
export interface Result {
    id: number;
    sourceSystemId?: number;
    customerId: number;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql generation-read-data.query.sql: generation-read-data.query.sql 1`] = `
"export interface Params {
    installationId?: number;
    exportDateOn?: Date;
}
export interface Result {
    dateOn: Date;
    value: number;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql insert.process.query.sql: insert.process.query.sql 1`] = `
"import { Json } from \\"@potygen/query\\";
export interface Params<TParamItemsData = unknown> {
    items: {
        processId: number;
        idempotencyKey?: string;
        data: TParamItemsData;
        accountId: number;
    }[];
}
export interface Result<TData = unknown> {
    id: number;
    data: Json<TData>;
}
export interface Query<TParamItemsData = unknown, TData = unknown> {
    params: Params<TParamItemsData>;
    result: Result<TData>;
}
"
`;

exports[`Load Files Should convert complex sql installation-meter-update.query.sql: installation-meter-update.query.sql 1`] = `
"export interface Params {
    removalDate?: Date;
    meterId?: number;
}
export interface Result {
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql installations.sql: installations.sql 1`] = `
"export interface Params {
}
export interface Result {
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql levelisations.list.query.sql: levelisations.list.query.sql 1`] = `
"export interface Params {
    q?: \\"\\";
    ids?: number[];
    sortField?: \\"quarter\\";
    sortOrder?: \\"DESC\\" | \\"ASC\\";
    limit?: number;
    offset?: number;
}
export interface Result {
    id: number;
    quarter: string;
    startOn: Date;
    endOn: Date;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql meter-reads.sql: meter-reads.sql 1`] = `
"export interface Params {
}
export interface Result {
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql process-batch.query.sql: process-batch.query.sql 1`] = `
"export interface Params {
    fitIds?: string[];
}
export interface Result {
    cfrFiTId?: string;
    email?: string;
    contactName: string;
    company?: string;
    line1?: string;
    line2: string;
    town?: string;
    postcode: string;
    county?: string;
    country: string;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql rates-by-tarrif-ids.query.sql: rates-by-tarrif-ids.query.sql 1`] = `
"export interface Params {
    ids: number[][];
}
export interface Result {
    tariffId: number;
    rate: string;
    startOn: Date;
    tariffCode: string;
    tariffType: \\"Export\\" | \\"Generation\\" | \\"SEG\\";
    endOn?: Date;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql read-create.query.sql: read-create.query.sql 1`] = `
"export interface Params {
    meterId?: number;
    reason?: string;
    type?: \\"Opening\\" | \\"Closing\\" | \\"Quarterly\\" | \\"Meter Verification\\";
    dateOn?: Date;
    submittedAt?: Date;
    value?: number;
}
export interface Result {
    id: number;
    value: number;
    meterId: number;
    submittedAt?: Date;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql reads-by-account-id.query.sql: reads-by-account-id.query.sql 1`] = `
"export interface Params {
    id?: number;
    offset?: string;
    perPage?: string;
}
export interface Result {
    id: number;
    msn: string;
    meterId: number;
    dateOn: Date;
    value: number;
    type: \\"Opening\\" | \\"Closing\\" | \\"Quarterly\\" | \\"Meter Verification\\";
    reason?: string;
    createdAt: Date;
    updatedAt?: Date;
    sourceSystemId?: number;
    mpan: string;
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;

exports[`Load Files Should convert complex sql tariff-rates.sql: tariff-rates.sql 1`] = `
"export interface Params {
}
export interface Result {
}
export interface Query {
    params: Params;
    result: Result;
}
"
`;
