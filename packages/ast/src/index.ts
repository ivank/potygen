import { Parser } from '@ikerin/rd-parse';
import { Grammar } from './grammar';
import { SelectTag, UpdateTag, DeleteTag, InsertTag, CombinationTag } from './grammar.types';

export {
  SqlTag,
  NullTag,
  QuotedNameTag,
  IdentifierTag,
  ParameterTag,
  QualifiedIdentifierTag,
  AsTag,
  StringTag,
  NumberTag,
  BooleanTag,
  ArrayIndexRangeTag,
  ArrayIndexTag,
  CountTag,
  TypeTag,
  TypeArrayTag,
  DistinctTag,
  StarIdentifierTag,
  StarQualifiedIdentifierTag,
  RowTag,
  NativePgCastTag,
  WhenTag,
  ElseTag,
  CaseTag,
  NullIfTag,
  ConditionalExpressionTag,
  OperatorTag,
  BinaryExpressionTag,
  UnaryExpressionTag,
  BetweenTag,
  CastTag,
  PgCastTag,
  ArrayConstructorTag,
  FunctionTag,
  SubqueryExpressionTag,
  SelectListItemTag,
  SelectListTag,
  FromListItemTag,
  JoinTypeTag,
  JoinOnTag,
  JoinUsingTag,
  JoinTag,
  FromListTag,
  FromTag,
  WhereTag,
  GroupByTag,
  HavingTag,
  CombinationTag,
  OrderDirectionTag,
  OrderByItemTag,
  OrderByTag,
  LimitTag,
  OffsetTag,
  SelectTag,
  DefaultTag,
  SetItemTag,
  SetListTag,
  ColumnsTag,
  ValuesTag,
  SetMapTag,
  SetTag,
  TableTag,
  UpdateFromTag,
  ReturningListItemTag,
  ReturningTag,
  UpdateTag,
  UsingTag,
  DeleteTag,
  ValuesListTag,
  CollateTag,
  ConflictTargetTag,
  ConflictConstraintTag,
  DoNothingTag,
  DoUpdateTag,
  ConflictTag,
  InsertTag,
  ConstantTag,
  AnyTypeTag,
  SelectParts,
  OperatorExpressionTag,
  AnyCastTag,
  DataTypeTag,
  CastableDataTypeTag,
  ExpressionTag,
  Tag,
} from './grammar.types';

export {
  isNull,
  isPgCast,
  isIdentifier,
  isParameter,
  isQualifiedIdentifier,
  isAs,
  isString,
  isNumber,
  isBoolean,
  isConstant,
  isCount,
  isArrayIndexRange,
  isType,
  isAnyType,
  isTypeArray,
  isDistinct,
  isStarIdentifier,
  isStarQualifiedIdentifier,
  isCastableDataType,
  isWhen,
  isElse,
  isCase,
  isNullIf,
  isConditionalExpression,
  isDataType,
  isOperator,
  isBetween,
  isArrayIndex,
  isFunction,
  isUnaryExpression,
  isBinaryExpression,
  isCast,
  isAnyCast,
  isOperatorExpression,
  isExpression,
  isSelectListItem,
  isReturningListItem,
  isSelectList,
  isFromListItem,
  isFrom,
  isFromList,
  isJoinType,
  isJoinOn,
  isJoinUsing,
  isJoin,
  isWhere,
  isGroupBy,
  isHaving,
  isCombination,
  isOrderDirection,
  isOrderByItem,
  isOrderBy,
  isLimit,
  isOffset,
  isSelect,
  isDefault,
  isSetItem,
  isSetList,
  isColumns,
  isValues,
  isSetMap,
  isSet,
  isTable,
  isUpdateFrom,
  isReturning,
  isUpdate,
  isUsing,
  isDelete,
  isValuesList,
  isInsertTag,
  isQuotedName,
  isCollateTag,
  isConflictTarget,
  isConflictConstraint,
  isDoNothing,
  isDoUpdate,
  isConflict,
  isArrayConstructor,
  isRow,
  isSelectTag,
  isSubqueryExpression,
} from './grammar.guards';

export {
  length,
  identity,
  tail,
  isEmpty,
  last,
  first,
  initial,
  isUnique,
  orderBy,
  isNil,
  uniqBy,
  diffBy,
  isObject,
} from './util';

export { Grammar } from './grammar';

export const parser = Parser<SelectTag | UpdateTag | DeleteTag | InsertTag | CombinationTag>(Grammar);
